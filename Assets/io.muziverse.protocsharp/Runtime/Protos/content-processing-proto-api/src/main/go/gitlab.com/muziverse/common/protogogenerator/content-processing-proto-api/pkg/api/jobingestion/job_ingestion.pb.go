// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: job_ingestion.proto

package jobingestion

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	paging "gitlab.com/muziverse/common/protogogenerator/common-proto-api/pkg/paging"
	common "gitlab.com/muziverse/common/protogogenerator/content-processing-proto-api/pkg/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetJobIngestionDetailByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *GetJobIngestionDetailByIdRequest) Reset() {
	*x = GetJobIngestionDetailByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_ingestion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobIngestionDetailByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobIngestionDetailByIdRequest) ProtoMessage() {}

func (x *GetJobIngestionDetailByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_ingestion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobIngestionDetailByIdRequest.ProtoReflect.Descriptor instead.
func (*GetJobIngestionDetailByIdRequest) Descriptor() ([]byte, []int) {
	return file_job_ingestion_proto_rawDescGZIP(), []int{0}
}

func (x *GetJobIngestionDetailByIdRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type GetJobIngestionDetailByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status     common.JobStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=JobStatus" json:"status,omitempty"`
	ToolType   common.ToolType        `protobuf:"varint,3,opt,name=tool_type,json=toolType,proto3,enum=ToolType" json:"tool_type,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Message    string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	StackTrace string                 `protobuf:"bytes,7,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	FileName   string                 `protobuf:"bytes,8,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *GetJobIngestionDetailByIdResponse) Reset() {
	*x = GetJobIngestionDetailByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_ingestion_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobIngestionDetailByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobIngestionDetailByIdResponse) ProtoMessage() {}

func (x *GetJobIngestionDetailByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_ingestion_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobIngestionDetailByIdResponse.ProtoReflect.Descriptor instead.
func (*GetJobIngestionDetailByIdResponse) Descriptor() ([]byte, []int) {
	return file_job_ingestion_proto_rawDescGZIP(), []int{1}
}

func (x *GetJobIngestionDetailByIdResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetJobIngestionDetailByIdResponse) GetStatus() common.JobStatus {
	if x != nil {
		return x.Status
	}
	return common.JobStatus(0)
}

func (x *GetJobIngestionDetailByIdResponse) GetToolType() common.ToolType {
	if x != nil {
		return x.ToolType
	}
	return common.ToolType(0)
}

func (x *GetJobIngestionDetailByIdResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetJobIngestionDetailByIdResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetJobIngestionDetailByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetJobIngestionDetailByIdResponse) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *GetJobIngestionDetailByIdResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type GetJobsIngestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pageable *paging.Pageable `protobuf:"bytes,1,opt,name=pageable,proto3" json:"pageable,omitempty"`
}

func (x *GetJobsIngestionRequest) Reset() {
	*x = GetJobsIngestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_ingestion_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsIngestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsIngestionRequest) ProtoMessage() {}

func (x *GetJobsIngestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_ingestion_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsIngestionRequest.ProtoReflect.Descriptor instead.
func (*GetJobsIngestionRequest) Descriptor() ([]byte, []int) {
	return file_job_ingestion_proto_rawDescGZIP(), []int{2}
}

func (x *GetJobsIngestionRequest) GetPageable() *paging.Pageable {
	if x != nil {
		return x.Pageable
	}
	return nil
}

type JobIngestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    common.JobStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=JobStatus" json:"status,omitempty"`
	ToolType  common.ToolType        `protobuf:"varint,3,opt,name=tool_type,json=toolType,proto3,enum=ToolType" json:"tool_type,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FileName  string                 `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Message   string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *JobIngestionResponse) Reset() {
	*x = JobIngestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_ingestion_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobIngestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobIngestionResponse) ProtoMessage() {}

func (x *JobIngestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_ingestion_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobIngestionResponse.ProtoReflect.Descriptor instead.
func (*JobIngestionResponse) Descriptor() ([]byte, []int) {
	return file_job_ingestion_proto_rawDescGZIP(), []int{3}
}

func (x *JobIngestionResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobIngestionResponse) GetStatus() common.JobStatus {
	if x != nil {
		return x.Status
	}
	return common.JobStatus(0)
}

func (x *JobIngestionResponse) GetToolType() common.ToolType {
	if x != nil {
		return x.ToolType
	}
	return common.ToolType(0)
}

func (x *JobIngestionResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *JobIngestionResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *JobIngestionResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *JobIngestionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetJobsIngestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*JobIngestionResponse `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetJobsIngestionResponse) Reset() {
	*x = GetJobsIngestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_ingestion_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsIngestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsIngestionResponse) ProtoMessage() {}

func (x *GetJobsIngestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_ingestion_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsIngestionResponse.ProtoReflect.Descriptor instead.
func (*GetJobsIngestionResponse) Descriptor() ([]byte, []int) {
	return file_job_ingestion_proto_rawDescGZIP(), []int{4}
}

func (x *GetJobsIngestionResponse) GetData() []*JobIngestionResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetJobsIngestionResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateJobIngestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File     string          `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	ToolType common.ToolType `protobuf:"varint,2,opt,name=tool_type,json=toolType,proto3,enum=ToolType" json:"tool_type,omitempty"`
}

func (x *CreateJobIngestionRequest) Reset() {
	*x = CreateJobIngestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_ingestion_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobIngestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobIngestionRequest) ProtoMessage() {}

func (x *CreateJobIngestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_ingestion_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobIngestionRequest.ProtoReflect.Descriptor instead.
func (*CreateJobIngestionRequest) Descriptor() ([]byte, []int) {
	return file_job_ingestion_proto_rawDescGZIP(), []int{5}
}

func (x *CreateJobIngestionRequest) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *CreateJobIngestionRequest) GetToolType() common.ToolType {
	if x != nil {
		return x.ToolType
	}
	return common.ToolType(0)
}

type CreateJobIngestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *CreateJobIngestionResponse) Reset() {
	*x = CreateJobIngestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_job_ingestion_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobIngestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobIngestionResponse) ProtoMessage() {}

func (x *CreateJobIngestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_ingestion_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobIngestionResponse.ProtoReflect.Descriptor instead.
func (*CreateJobIngestionResponse) Descriptor() ([]byte, []int) {
	return file_job_ingestion_proto_rawDescGZIP(), []int{6}
}

func (x *CreateJobIngestionResponse) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

var File_job_ingestion_proto protoreflect.FileDescriptor

var file_job_ingestion_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x6a, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x39, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0xcd, 0x02,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x09, 0x74, 0x6f, 0x6f, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x54, 0x6f, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x9f, 0x02, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x49, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x09, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x74, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x73, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x6a, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x57, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x33, 0x0a,
	0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x32, 0xcd, 0x03, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x8d, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x6a,
	0x6f, 0x62, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x6a, 0x6f, 0x62, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x6a, 0x6f, 0x62,
	0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x6a, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x40, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e,
	0x6a, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x2e, 0x6a, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0xad, 0x01, 0x0a, 0x36, 0x69, 0x6f, 0x2e, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x6e, 0x65,
	0x6e, 0x74, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6a, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x4a,
	0x6f, 0x62, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x5e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x6f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6a, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_job_ingestion_proto_rawDescOnce sync.Once
	file_job_ingestion_proto_rawDescData = file_job_ingestion_proto_rawDesc
)

func file_job_ingestion_proto_rawDescGZIP() []byte {
	file_job_ingestion_proto_rawDescOnce.Do(func() {
		file_job_ingestion_proto_rawDescData = protoimpl.X.CompressGZIP(file_job_ingestion_proto_rawDescData)
	})
	return file_job_ingestion_proto_rawDescData
}

var file_job_ingestion_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_job_ingestion_proto_goTypes = []interface{}{
	(*GetJobIngestionDetailByIdRequest)(nil),  // 0: contentprocessing.jobingestion.GetJobIngestionDetailByIdRequest
	(*GetJobIngestionDetailByIdResponse)(nil), // 1: contentprocessing.jobingestion.GetJobIngestionDetailByIdResponse
	(*GetJobsIngestionRequest)(nil),           // 2: contentprocessing.jobingestion.GetJobsIngestionRequest
	(*JobIngestionResponse)(nil),              // 3: contentprocessing.jobingestion.JobIngestionResponse
	(*GetJobsIngestionResponse)(nil),          // 4: contentprocessing.jobingestion.GetJobsIngestionResponse
	(*CreateJobIngestionRequest)(nil),         // 5: contentprocessing.jobingestion.CreateJobIngestionRequest
	(*CreateJobIngestionResponse)(nil),        // 6: contentprocessing.jobingestion.CreateJobIngestionResponse
	(common.JobStatus)(0),                     // 7: JobStatus
	(common.ToolType)(0),                      // 8: ToolType
	(*timestamppb.Timestamp)(nil),             // 9: google.protobuf.Timestamp
	(*paging.Pageable)(nil),                   // 10: common.Pageable
}
var file_job_ingestion_proto_depIdxs = []int32{
	7,  // 0: contentprocessing.jobingestion.GetJobIngestionDetailByIdResponse.status:type_name -> JobStatus
	8,  // 1: contentprocessing.jobingestion.GetJobIngestionDetailByIdResponse.tool_type:type_name -> ToolType
	9,  // 2: contentprocessing.jobingestion.GetJobIngestionDetailByIdResponse.created_at:type_name -> google.protobuf.Timestamp
	9,  // 3: contentprocessing.jobingestion.GetJobIngestionDetailByIdResponse.updated_at:type_name -> google.protobuf.Timestamp
	10, // 4: contentprocessing.jobingestion.GetJobsIngestionRequest.pageable:type_name -> common.Pageable
	7,  // 5: contentprocessing.jobingestion.JobIngestionResponse.status:type_name -> JobStatus
	8,  // 6: contentprocessing.jobingestion.JobIngestionResponse.tool_type:type_name -> ToolType
	9,  // 7: contentprocessing.jobingestion.JobIngestionResponse.created_at:type_name -> google.protobuf.Timestamp
	9,  // 8: contentprocessing.jobingestion.JobIngestionResponse.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 9: contentprocessing.jobingestion.GetJobsIngestionResponse.data:type_name -> contentprocessing.jobingestion.JobIngestionResponse
	8,  // 10: contentprocessing.jobingestion.CreateJobIngestionRequest.tool_type:type_name -> ToolType
	5,  // 11: contentprocessing.jobingestion.JobIngestion.CreateJobIngestion:input_type -> contentprocessing.jobingestion.CreateJobIngestionRequest
	2,  // 12: contentprocessing.jobingestion.JobIngestion.GetJobsIngestion:input_type -> contentprocessing.jobingestion.GetJobsIngestionRequest
	0,  // 13: contentprocessing.jobingestion.JobIngestion.GetJobIngestionDetailById:input_type -> contentprocessing.jobingestion.GetJobIngestionDetailByIdRequest
	6,  // 14: contentprocessing.jobingestion.JobIngestion.CreateJobIngestion:output_type -> contentprocessing.jobingestion.CreateJobIngestionResponse
	4,  // 15: contentprocessing.jobingestion.JobIngestion.GetJobsIngestion:output_type -> contentprocessing.jobingestion.GetJobsIngestionResponse
	1,  // 16: contentprocessing.jobingestion.JobIngestion.GetJobIngestionDetailById:output_type -> contentprocessing.jobingestion.GetJobIngestionDetailByIdResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_job_ingestion_proto_init() }
func file_job_ingestion_proto_init() {
	if File_job_ingestion_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_job_ingestion_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobIngestionDetailByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_ingestion_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobIngestionDetailByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_ingestion_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsIngestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_ingestion_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobIngestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_ingestion_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsIngestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_ingestion_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobIngestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_job_ingestion_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobIngestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_job_ingestion_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_job_ingestion_proto_goTypes,
		DependencyIndexes: file_job_ingestion_proto_depIdxs,
		MessageInfos:      file_job_ingestion_proto_msgTypes,
	}.Build()
	File_job_ingestion_proto = out.File
	file_job_ingestion_proto_rawDesc = nil
	file_job_ingestion_proto_goTypes = nil
	file_job_ingestion_proto_depIdxs = nil
}
