// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: job_ingestion.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Contentprocessing.Jobingestion {
  public static partial class JobIngestion
  {
    static readonly string __ServiceName = "contentprocessing.jobingestion.JobIngestion";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Contentprocessing.Jobingestion.CreateJobIngestionRequest> __Marshaller_contentprocessing_jobingestion_CreateJobIngestionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Contentprocessing.Jobingestion.CreateJobIngestionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Contentprocessing.Jobingestion.CreateJobIngestionResponse> __Marshaller_contentprocessing_jobingestion_CreateJobIngestionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Contentprocessing.Jobingestion.CreateJobIngestionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Contentprocessing.Jobingestion.GetJobsIngestionRequest> __Marshaller_contentprocessing_jobingestion_GetJobsIngestionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Contentprocessing.Jobingestion.GetJobsIngestionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Contentprocessing.Jobingestion.GetJobsIngestionResponse> __Marshaller_contentprocessing_jobingestion_GetJobsIngestionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Contentprocessing.Jobingestion.GetJobsIngestionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest> __Marshaller_contentprocessing_jobingestion_GetJobIngestionDetailByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse> __Marshaller_contentprocessing_jobingestion_GetJobIngestionDetailByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Contentprocessing.Jobingestion.CreateJobIngestionRequest, global::Contentprocessing.Jobingestion.CreateJobIngestionResponse> __Method_CreateJobIngestion = new grpc::Method<global::Contentprocessing.Jobingestion.CreateJobIngestionRequest, global::Contentprocessing.Jobingestion.CreateJobIngestionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateJobIngestion",
        __Marshaller_contentprocessing_jobingestion_CreateJobIngestionRequest,
        __Marshaller_contentprocessing_jobingestion_CreateJobIngestionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Contentprocessing.Jobingestion.GetJobsIngestionRequest, global::Contentprocessing.Jobingestion.GetJobsIngestionResponse> __Method_GetJobsIngestion = new grpc::Method<global::Contentprocessing.Jobingestion.GetJobsIngestionRequest, global::Contentprocessing.Jobingestion.GetJobsIngestionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetJobsIngestion",
        __Marshaller_contentprocessing_jobingestion_GetJobsIngestionRequest,
        __Marshaller_contentprocessing_jobingestion_GetJobsIngestionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest, global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse> __Method_GetJobIngestionDetailById = new grpc::Method<global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest, global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetJobIngestionDetailById",
        __Marshaller_contentprocessing_jobingestion_GetJobIngestionDetailByIdRequest,
        __Marshaller_contentprocessing_jobingestion_GetJobIngestionDetailByIdResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Contentprocessing.Jobingestion.JobIngestionReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of JobIngestion</summary>
    [grpc::BindServiceMethod(typeof(JobIngestion), "BindService")]
    public abstract partial class JobIngestionBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Contentprocessing.Jobingestion.CreateJobIngestionResponse> CreateJobIngestion(global::Contentprocessing.Jobingestion.CreateJobIngestionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Contentprocessing.Jobingestion.GetJobsIngestionResponse> GetJobsIngestion(global::Contentprocessing.Jobingestion.GetJobsIngestionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse> GetJobIngestionDetailById(global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for JobIngestion</summary>
    public partial class JobIngestionClient : grpc::ClientBase<JobIngestionClient>
    {
      /// <summary>Creates a new client for JobIngestion</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public JobIngestionClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for JobIngestion that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public JobIngestionClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected JobIngestionClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected JobIngestionClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Contentprocessing.Jobingestion.CreateJobIngestionResponse CreateJobIngestion(global::Contentprocessing.Jobingestion.CreateJobIngestionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateJobIngestion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Contentprocessing.Jobingestion.CreateJobIngestionResponse CreateJobIngestion(global::Contentprocessing.Jobingestion.CreateJobIngestionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateJobIngestion, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Contentprocessing.Jobingestion.CreateJobIngestionResponse> CreateJobIngestionAsync(global::Contentprocessing.Jobingestion.CreateJobIngestionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateJobIngestionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Contentprocessing.Jobingestion.CreateJobIngestionResponse> CreateJobIngestionAsync(global::Contentprocessing.Jobingestion.CreateJobIngestionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateJobIngestion, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Contentprocessing.Jobingestion.GetJobsIngestionResponse GetJobsIngestion(global::Contentprocessing.Jobingestion.GetJobsIngestionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJobsIngestion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Contentprocessing.Jobingestion.GetJobsIngestionResponse GetJobsIngestion(global::Contentprocessing.Jobingestion.GetJobsIngestionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetJobsIngestion, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Contentprocessing.Jobingestion.GetJobsIngestionResponse> GetJobsIngestionAsync(global::Contentprocessing.Jobingestion.GetJobsIngestionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJobsIngestionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Contentprocessing.Jobingestion.GetJobsIngestionResponse> GetJobsIngestionAsync(global::Contentprocessing.Jobingestion.GetJobsIngestionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetJobsIngestion, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse GetJobIngestionDetailById(global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJobIngestionDetailById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse GetJobIngestionDetailById(global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetJobIngestionDetailById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse> GetJobIngestionDetailByIdAsync(global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJobIngestionDetailByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse> GetJobIngestionDetailByIdAsync(global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetJobIngestionDetailById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override JobIngestionClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new JobIngestionClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(JobIngestionBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateJobIngestion, serviceImpl.CreateJobIngestion)
          .AddMethod(__Method_GetJobsIngestion, serviceImpl.GetJobsIngestion)
          .AddMethod(__Method_GetJobIngestionDetailById, serviceImpl.GetJobIngestionDetailById).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, JobIngestionBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateJobIngestion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Contentprocessing.Jobingestion.CreateJobIngestionRequest, global::Contentprocessing.Jobingestion.CreateJobIngestionResponse>(serviceImpl.CreateJobIngestion));
      serviceBinder.AddMethod(__Method_GetJobsIngestion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Contentprocessing.Jobingestion.GetJobsIngestionRequest, global::Contentprocessing.Jobingestion.GetJobsIngestionResponse>(serviceImpl.GetJobsIngestion));
      serviceBinder.AddMethod(__Method_GetJobIngestionDetailById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdRequest, global::Contentprocessing.Jobingestion.GetJobIngestionDetailByIdResponse>(serviceImpl.GetJobIngestionDetailById));
    }

  }
}
#endregion
