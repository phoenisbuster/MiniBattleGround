// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: domain/item_common.proto

package domain

import (
	domain "gitlab.com/muziverse/common/protogogenerator/common-proto-api/pkg/domain"
	common "gitlab.com/muziverse/common/protogogenerator/item-proto-api/pkg/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ItemCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryCode       string `protobuf:"bytes,1,opt,name=category_code,json=categoryCode,proto3" json:"category_code,omitempty"`
	ParentCategoryCode string `protobuf:"bytes,2,opt,name=parent_category_code,json=parentCategoryCode,proto3" json:"parent_category_code,omitempty"`
	CategoryName       string `protobuf:"bytes,3,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	Lv                 int32  `protobuf:"varint,4,opt,name=lv,proto3" json:"lv,omitempty"`
	CategoryRootPoint  int64  `protobuf:"varint,5,opt,name=category_root_point,json=categoryRootPoint,proto3" json:"category_root_point,omitempty"`
	CategoryPoint      string `protobuf:"bytes,6,opt,name=category_point,json=categoryPoint,proto3" json:"category_point,omitempty"`
}

func (x *ItemCategory) Reset() {
	*x = ItemCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCategory) ProtoMessage() {}

func (x *ItemCategory) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCategory.ProtoReflect.Descriptor instead.
func (*ItemCategory) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{0}
}

func (x *ItemCategory) GetCategoryCode() string {
	if x != nil {
		return x.CategoryCode
	}
	return ""
}

func (x *ItemCategory) GetParentCategoryCode() string {
	if x != nil {
		return x.ParentCategoryCode
	}
	return ""
}

func (x *ItemCategory) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ItemCategory) GetLv() int32 {
	if x != nil {
		return x.Lv
	}
	return 0
}

func (x *ItemCategory) GetCategoryRootPoint() int64 {
	if x != nil {
		return x.CategoryRootPoint
	}
	return 0
}

func (x *ItemCategory) GetCategoryPoint() string {
	if x != nil {
		return x.CategoryPoint
	}
	return ""
}

type ItemCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionCode  string `protobuf:"bytes,1,opt,name=collection_code,json=collectionCode,proto3" json:"collection_code,omitempty"`
	CollectionName  string `protobuf:"bytes,2,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	CollectionOrder int64  `protobuf:"varint,3,opt,name=collection_order,json=collectionOrder,proto3" json:"collection_order,omitempty"`
}

func (x *ItemCollection) Reset() {
	*x = ItemCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCollection) ProtoMessage() {}

func (x *ItemCollection) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCollection.ProtoReflect.Descriptor instead.
func (*ItemCollection) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{1}
}

func (x *ItemCollection) GetCollectionCode() string {
	if x != nil {
		return x.CollectionCode
	}
	return ""
}

func (x *ItemCollection) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *ItemCollection) GetCollectionOrder() int64 {
	if x != nil {
		return x.CollectionOrder
	}
	return 0
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId         string          `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Rarity             domain.Rarity   `protobuf:"varint,2,opt,name=rarity,proto3,enum=Rarity" json:"rarity,omitempty"`
	Description        string          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Title              string          `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	CategoryCode       string          `protobuf:"bytes,5,opt,name=category_code,json=categoryCode,proto3" json:"category_code,omitempty"`
	ParentCategoryCode string          `protobuf:"bytes,6,opt,name=parent_category_code,json=parentCategoryCode,proto3" json:"parent_category_code,omitempty"`
	Resources          []*ResourceData `protobuf:"bytes,7,rep,name=resources,proto3" json:"resources,omitempty"`
	Options            []*ItemOption   `protobuf:"bytes,8,rep,name=options,proto3" json:"options,omitempty"`
	Properties         []*ItemProperty `protobuf:"bytes,9,rep,name=properties,proto3" json:"properties,omitempty"`
	Prices             []*ItemPrice    `protobuf:"bytes,10,rep,name=prices,proto3" json:"prices,omitempty"`
	CategoryDetail     *ItemCategory   `protobuf:"bytes,11,opt,name=category_detail,json=categoryDetail,proto3" json:"category_detail,omitempty"`
	CollectionCode     string          `protobuf:"bytes,12,opt,name=collection_code,json=collectionCode,proto3" json:"collection_code,omitempty"`
	CollectionDetail   *ItemCollection `protobuf:"bytes,13,opt,name=collection_detail,json=collectionDetail,proto3" json:"collection_detail,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{2}
}

func (x *Item) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Item) GetRarity() domain.Rarity {
	if x != nil {
		return x.Rarity
	}
	return domain.Rarity(0)
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Item) GetCategoryCode() string {
	if x != nil {
		return x.CategoryCode
	}
	return ""
}

func (x *Item) GetParentCategoryCode() string {
	if x != nil {
		return x.ParentCategoryCode
	}
	return ""
}

func (x *Item) GetResources() []*ResourceData {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Item) GetOptions() []*ItemOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Item) GetProperties() []*ItemProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Item) GetPrices() []*ItemPrice {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *Item) GetCategoryDetail() *ItemCategory {
	if x != nil {
		return x.CategoryDetail
	}
	return nil
}

func (x *Item) GetCollectionCode() string {
	if x != nil {
		return x.CollectionCode
	}
	return ""
}

func (x *Item) GetCollectionDetail() *ItemCollection {
	if x != nil {
		return x.CollectionDetail
	}
	return nil
}

type ItemPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	SellPrice string `protobuf:"bytes,3,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
	BuyPrice  string `protobuf:"bytes,4,opt,name=buy_price,json=buyPrice,proto3" json:"buy_price,omitempty"`
	Currency  string `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *ItemPrice) Reset() {
	*x = ItemPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPrice) ProtoMessage() {}

func (x *ItemPrice) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPrice.ProtoReflect.Descriptor instead.
func (*ItemPrice) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{3}
}

func (x *ItemPrice) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemPrice) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ItemPrice) GetSellPrice() string {
	if x != nil {
		return x.SellPrice
	}
	return ""
}

func (x *ItemPrice) GetBuyPrice() string {
	if x != nil {
		return x.BuyPrice
	}
	return ""
}

func (x *ItemPrice) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type ItemOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionType common.OptionType              `protobuf:"varint,1,opt,name=option_type,json=optionType,proto3,enum=OptionType" json:"option_type,omitempty"`
	Options    []*ItemOption_ItemSingleOption `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *ItemOption) Reset() {
	*x = ItemOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemOption) ProtoMessage() {}

func (x *ItemOption) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemOption.ProtoReflect.Descriptor instead.
func (*ItemOption) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{4}
}

func (x *ItemOption) GetOptionType() common.OptionType {
	if x != nil {
		return x.OptionType
	}
	return common.OptionType(0)
}

func (x *ItemOption) GetOptions() []*ItemOption_ItemSingleOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type ItemProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyPath  string `protobuf:"bytes,1,opt,name=property_path,json=propertyPath,proto3" json:"property_path,omitempty"`
	PropertyValue string `protobuf:"bytes,2,opt,name=property_value,json=propertyValue,proto3" json:"property_value,omitempty"`
}

func (x *ItemProperty) Reset() {
	*x = ItemProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemProperty) ProtoMessage() {}

func (x *ItemProperty) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemProperty.ProtoReflect.Descriptor instead.
func (*ItemProperty) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{5}
}

func (x *ItemProperty) GetPropertyPath() string {
	if x != nil {
		return x.PropertyPath
	}
	return ""
}

func (x *ItemProperty) GetPropertyValue() string {
	if x != nil {
		return x.PropertyValue
	}
	return ""
}

type Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Size) Reset() {
	*x = Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Size.ProtoReflect.Descriptor instead.
func (*Size) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{6}
}

func (x *Size) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Size) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Size) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

type ResourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId     string                  `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType   common.ItemResourceType `protobuf:"varint,2,opt,name=resource_type,json=resourceType,proto3,enum=ItemResourceType" json:"resource_type,omitempty"`
	ResourceGroups string                  `protobuf:"bytes,3,opt,name=resource_groups,json=resourceGroups,proto3" json:"resource_groups,omitempty"`
	ResourcePath   string                  `protobuf:"bytes,4,opt,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
}

func (x *ResourceData) Reset() {
	*x = ResourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceData) ProtoMessage() {}

func (x *ResourceData) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceData.ProtoReflect.Descriptor instead.
func (*ResourceData) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{7}
}

func (x *ResourceData) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ResourceData) GetResourceType() common.ItemResourceType {
	if x != nil {
		return x.ResourceType
	}
	return common.ItemResourceType(0)
}

func (x *ResourceData) GetResourceGroups() string {
	if x != nil {
		return x.ResourceGroups
	}
	return ""
}

func (x *ResourceData) GetResourcePath() string {
	if x != nil {
		return x.ResourcePath
	}
	return ""
}

type ResourceUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ResourceGroups string                  `protobuf:"bytes,2,opt,name=resource_groups,json=resourceGroups,proto3" json:"resource_groups,omitempty"`
	ResourceType   common.ItemResourceType `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=ItemResourceType" json:"resource_type,omitempty"`
	ResourceId     string                  `protobuf:"bytes,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *ResourceUpsert) Reset() {
	*x = ResourceUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUpsert) ProtoMessage() {}

func (x *ResourceUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUpsert.ProtoReflect.Descriptor instead.
func (*ResourceUpsert) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceUpsert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResourceUpsert) GetResourceGroups() string {
	if x != nil {
		return x.ResourceGroups
	}
	return ""
}

func (x *ResourceUpsert) GetResourceType() common.ItemResourceType {
	if x != nil {
		return x.ResourceType
	}
	return common.ItemResourceType(0)
}

func (x *ResourceUpsert) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type ItemFetchDirective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetResources        bool   `protobuf:"varint,1,opt,name=get_resources,json=getResources,proto3" json:"get_resources,omitempty"`
	GetOptions          bool   `protobuf:"varint,2,opt,name=get_options,json=getOptions,proto3" json:"get_options,omitempty"`
	GetProperties       bool   `protobuf:"varint,3,opt,name=get_properties,json=getProperties,proto3" json:"get_properties,omitempty"`
	RelativePath        string `protobuf:"bytes,4,opt,name=relative_path,json=relativePath,proto3" json:"relative_path,omitempty"`
	GetPrice            bool   `protobuf:"varint,5,opt,name=get_price,json=getPrice,proto3" json:"get_price,omitempty"`
	GetCategoryDetail   bool   `protobuf:"varint,6,opt,name=get_category_detail,json=getCategoryDetail,proto3" json:"get_category_detail,omitempty"`
	GetCollectionDetail bool   `protobuf:"varint,7,opt,name=get_collection_detail,json=getCollectionDetail,proto3" json:"get_collection_detail,omitempty"`
}

func (x *ItemFetchDirective) Reset() {
	*x = ItemFetchDirective{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemFetchDirective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemFetchDirective) ProtoMessage() {}

func (x *ItemFetchDirective) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemFetchDirective.ProtoReflect.Descriptor instead.
func (*ItemFetchDirective) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{9}
}

func (x *ItemFetchDirective) GetGetResources() bool {
	if x != nil {
		return x.GetResources
	}
	return false
}

func (x *ItemFetchDirective) GetGetOptions() bool {
	if x != nil {
		return x.GetOptions
	}
	return false
}

func (x *ItemFetchDirective) GetGetProperties() bool {
	if x != nil {
		return x.GetProperties
	}
	return false
}

func (x *ItemFetchDirective) GetRelativePath() string {
	if x != nil {
		return x.RelativePath
	}
	return ""
}

func (x *ItemFetchDirective) GetGetPrice() bool {
	if x != nil {
		return x.GetPrice
	}
	return false
}

func (x *ItemFetchDirective) GetGetCategoryDetail() bool {
	if x != nil {
		return x.GetCategoryDetail
	}
	return false
}

func (x *ItemFetchDirective) GetGetCollectionDetail() bool {
	if x != nil {
		return x.GetCollectionDetail
	}
	return false
}

type ItemOption_ItemSingleOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue   string `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	OptionOrdering int32  `protobuf:"varint,3,opt,name=option_ordering,json=optionOrdering,proto3" json:"option_ordering,omitempty"`
	LinkedItem     *Item  `protobuf:"bytes,4,opt,name=linked_item,json=linkedItem,proto3" json:"linked_item,omitempty"`
}

func (x *ItemOption_ItemSingleOption) Reset() {
	*x = ItemOption_ItemSingleOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_item_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemOption_ItemSingleOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemOption_ItemSingleOption) ProtoMessage() {}

func (x *ItemOption_ItemSingleOption) ProtoReflect() protoreflect.Message {
	mi := &file_domain_item_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemOption_ItemSingleOption.ProtoReflect.Descriptor instead.
func (*ItemOption_ItemSingleOption) Descriptor() ([]byte, []int) {
	return file_domain_item_common_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ItemOption_ItemSingleOption) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *ItemOption_ItemSingleOption) GetOptionOrdering() int32 {
	if x != nil {
		return x.OptionOrdering
	}
	return 0
}

func (x *ItemOption_ItemSingleOption) GetLinkedItem() *Item {
	if x != nil {
		return x.LinkedItem
	}
	return nil
}

var File_domain_item_common_proto protoreflect.FileDescriptor

var file_domain_item_common_proto_rawDesc = []byte{
	0x0a, 0x18, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x01, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x6c, 0x76, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x0e,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x9d, 0x04, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x06,
	0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a,
	0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x8b, 0x01, 0x0a, 0x09,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xfd, 0x01, 0x0a, 0x0a, 0x49, 0x74,
	0x65, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x88,
	0x01, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x26, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x5a, 0x0a, 0x0c, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x22, 0xb5, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22,
	0xa2, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x12, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67,
	0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x67, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x65,
	0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x67, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x67, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x67, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x9e,
	0x01, 0x0a, 0x1e, 0x69, 0x6f, 0x2e, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x42, 0x14, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x6f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0xaa, 0x02, 0x1b, 0x4d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_item_common_proto_rawDescOnce sync.Once
	file_domain_item_common_proto_rawDescData = file_domain_item_common_proto_rawDesc
)

func file_domain_item_common_proto_rawDescGZIP() []byte {
	file_domain_item_common_proto_rawDescOnce.Do(func() {
		file_domain_item_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_item_common_proto_rawDescData)
	})
	return file_domain_item_common_proto_rawDescData
}

var file_domain_item_common_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_domain_item_common_proto_goTypes = []interface{}{
	(*ItemCategory)(nil),                // 0: ItemCategory
	(*ItemCollection)(nil),              // 1: ItemCollection
	(*Item)(nil),                        // 2: Item
	(*ItemPrice)(nil),                   // 3: ItemPrice
	(*ItemOption)(nil),                  // 4: ItemOption
	(*ItemProperty)(nil),                // 5: ItemProperty
	(*Size)(nil),                        // 6: Size
	(*ResourceData)(nil),                // 7: ResourceData
	(*ResourceUpsert)(nil),              // 8: ResourceUpsert
	(*ItemFetchDirective)(nil),          // 9: ItemFetchDirective
	(*ItemOption_ItemSingleOption)(nil), // 10: ItemOption.ItemSingleOption
	(domain.Rarity)(0),                  // 11: Rarity
	(common.OptionType)(0),              // 12: OptionType
	(common.ItemResourceType)(0),        // 13: ItemResourceType
}
var file_domain_item_common_proto_depIdxs = []int32{
	11, // 0: Item.rarity:type_name -> Rarity
	7,  // 1: Item.resources:type_name -> ResourceData
	4,  // 2: Item.options:type_name -> ItemOption
	5,  // 3: Item.properties:type_name -> ItemProperty
	3,  // 4: Item.prices:type_name -> ItemPrice
	0,  // 5: Item.category_detail:type_name -> ItemCategory
	1,  // 6: Item.collection_detail:type_name -> ItemCollection
	12, // 7: ItemOption.option_type:type_name -> OptionType
	10, // 8: ItemOption.options:type_name -> ItemOption.ItemSingleOption
	13, // 9: ResourceData.resource_type:type_name -> ItemResourceType
	13, // 10: ResourceUpsert.resource_type:type_name -> ItemResourceType
	2,  // 11: ItemOption.ItemSingleOption.linked_item:type_name -> Item
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_domain_item_common_proto_init() }
func file_domain_item_common_proto_init() {
	if File_domain_item_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_item_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemFetchDirective); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_item_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemOption_ItemSingleOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_item_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_domain_item_common_proto_goTypes,
		DependencyIndexes: file_domain_item_common_proto_depIdxs,
		MessageInfos:      file_domain_item_common_proto_msgTypes,
	}.Build()
	File_domain_item_common_proto = out.File
	file_domain_item_common_proto_rawDesc = nil
	file_domain_item_common_proto_goTypes = nil
	file_domain_item_common_proto_depIdxs = nil
}
