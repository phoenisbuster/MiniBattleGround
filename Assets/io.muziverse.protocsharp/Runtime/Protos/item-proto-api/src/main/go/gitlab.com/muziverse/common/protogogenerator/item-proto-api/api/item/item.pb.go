// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: item.proto

package item

import (
	domain1 "gitlab.com/muziverse/common/protogogenerator/common-proto-api/domain"
	paging "gitlab.com/muziverse/common/protogogenerator/common-proto-api/paging"
	common "gitlab.com/muziverse/common/protogogenerator/item-proto-api/common"
	domain "gitlab.com/muziverse/common/protogogenerator/item-proto-api/domain"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchUpsertItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*BatchUpsertItemRequest_ItemUpdateRequest `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BatchUpsertItemRequest) Reset() {
	*x = BatchUpsertItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpsertItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpsertItemRequest) ProtoMessage() {}

func (x *BatchUpsertItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpsertItemRequest.ProtoReflect.Descriptor instead.
func (*BatchUpsertItemRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{0}
}

func (x *BatchUpsertItemRequest) GetItems() []*BatchUpsertItemRequest_ItemUpdateRequest {
	if x != nil {
		return x.Items
	}
	return nil
}

type QueryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pageable       *paging.Pageable                 `protobuf:"bytes,1,opt,name=pageable,proto3" json:"pageable,omitempty"`
	Query          *QueryItemRequest_QueryItemQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	FetchDirective *domain.ItemFetchDirective       `protobuf:"bytes,3,opt,name=fetch_directive,json=fetchDirective,proto3" json:"fetch_directive,omitempty"`
}

func (x *QueryItemRequest) Reset() {
	*x = QueryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryItemRequest) ProtoMessage() {}

func (x *QueryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryItemRequest.ProtoReflect.Descriptor instead.
func (*QueryItemRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{1}
}

func (x *QueryItemRequest) GetPageable() *paging.Pageable {
	if x != nil {
		return x.Pageable
	}
	return nil
}

func (x *QueryItemRequest) GetQuery() *QueryItemRequest_QueryItemQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *QueryItemRequest) GetFetchDirective() *domain.ItemFetchDirective {
	if x != nil {
		return x.FetchDirective
	}
	return nil
}

type ExternalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalIds    []string                   `protobuf:"bytes,1,rep,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
	FetchDirective *domain.ItemFetchDirective `protobuf:"bytes,2,opt,name=fetch_directive,json=fetchDirective,proto3" json:"fetch_directive,omitempty"`
}

func (x *ExternalIdRequest) Reset() {
	*x = ExternalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalIdRequest) ProtoMessage() {}

func (x *ExternalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalIdRequest.ProtoReflect.Descriptor instead.
func (*ExternalIdRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{2}
}

func (x *ExternalIdRequest) GetExternalIds() []string {
	if x != nil {
		return x.ExternalIds
	}
	return nil
}

func (x *ExternalIdRequest) GetFetchDirective() *domain.ItemFetchDirective {
	if x != nil {
		return x.FetchDirective
	}
	return nil
}

type QueryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*domain.Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryItemResponse) Reset() {
	*x = QueryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryItemResponse) ProtoMessage() {}

func (x *QueryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryItemResponse.ProtoReflect.Descriptor instead.
func (*QueryItemResponse) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{3}
}

func (x *QueryItemResponse) GetItems() []*domain.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *QueryItemResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ItemResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*domain.Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ItemResponseList) Reset() {
	*x = ItemResponseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemResponseList) ProtoMessage() {}

func (x *ItemResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemResponseList.ProtoReflect.Descriptor instead.
func (*ItemResponseList) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{4}
}

func (x *ItemResponseList) GetItems() []*domain.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BatchUpsertItemRequest_ItemUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId    string                                                  `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Rarity        domain1.Rarity                                          `protobuf:"varint,2,opt,name=rarity,proto3,enum=Rarity" json:"rarity,omitempty"`
	Description   string                                                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Title         string                                                  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	CategoryCode  string                                                  `protobuf:"bytes,5,opt,name=category_code,json=categoryCode,proto3" json:"category_code,omitempty"`
	Resources     []*domain.ResourceUpsert                                `protobuf:"bytes,7,rep,name=resources,proto3" json:"resources,omitempty"`
	SingleOptions []*BatchUpsertItemRequest_ItemSingleOptionUpdateRequest `protobuf:"bytes,8,rep,name=single_options,json=singleOptions,proto3" json:"single_options,omitempty"`
	Properties    []*BatchUpsertItemRequest_ItemPropertyUpdateRequest     `protobuf:"bytes,9,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) Reset() {
	*x = BatchUpsertItemRequest_ItemUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpsertItemRequest_ItemUpdateRequest) ProtoMessage() {}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpsertItemRequest_ItemUpdateRequest.ProtoReflect.Descriptor instead.
func (*BatchUpsertItemRequest_ItemUpdateRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) GetRarity() domain1.Rarity {
	if x != nil {
		return x.Rarity
	}
	return domain1.Rarity(0)
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) GetCategoryCode() string {
	if x != nil {
		return x.CategoryCode
	}
	return ""
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) GetResources() []*domain.ResourceUpsert {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) GetSingleOptions() []*BatchUpsertItemRequest_ItemSingleOptionUpdateRequest {
	if x != nil {
		return x.SingleOptions
	}
	return nil
}

func (x *BatchUpsertItemRequest_ItemUpdateRequest) GetProperties() []*BatchUpsertItemRequest_ItemPropertyUpdateRequest {
	if x != nil {
		return x.Properties
	}
	return nil
}

type BatchUpsertItemRequest_ItemSingleOptionUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionType     common.OptionType `protobuf:"varint,1,opt,name=option_type,json=optionType,proto3,enum=OptionType" json:"option_type,omitempty"`
	DefaultValue   string            `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	OptionOrdering int32             `protobuf:"varint,3,opt,name=option_ordering,json=optionOrdering,proto3" json:"option_ordering,omitempty"`
	LinkedItemId   string            `protobuf:"bytes,4,opt,name=linked_item_id,json=linkedItemId,proto3" json:"linked_item_id,omitempty"`
}

func (x *BatchUpsertItemRequest_ItemSingleOptionUpdateRequest) Reset() {
	*x = BatchUpsertItemRequest_ItemSingleOptionUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpsertItemRequest_ItemSingleOptionUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpsertItemRequest_ItemSingleOptionUpdateRequest) ProtoMessage() {}

func (x *BatchUpsertItemRequest_ItemSingleOptionUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpsertItemRequest_ItemSingleOptionUpdateRequest.ProtoReflect.Descriptor instead.
func (*BatchUpsertItemRequest_ItemSingleOptionUpdateRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BatchUpsertItemRequest_ItemSingleOptionUpdateRequest) GetOptionType() common.OptionType {
	if x != nil {
		return x.OptionType
	}
	return common.OptionType(0)
}

func (x *BatchUpsertItemRequest_ItemSingleOptionUpdateRequest) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *BatchUpsertItemRequest_ItemSingleOptionUpdateRequest) GetOptionOrdering() int32 {
	if x != nil {
		return x.OptionOrdering
	}
	return 0
}

func (x *BatchUpsertItemRequest_ItemSingleOptionUpdateRequest) GetLinkedItemId() string {
	if x != nil {
		return x.LinkedItemId
	}
	return ""
}

type BatchUpsertItemRequest_ItemPropertyUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyPath  string `protobuf:"bytes,1,opt,name=property_path,json=propertyPath,proto3" json:"property_path,omitempty"`
	PropertyValue string `protobuf:"bytes,2,opt,name=property_value,json=propertyValue,proto3" json:"property_value,omitempty"`
}

func (x *BatchUpsertItemRequest_ItemPropertyUpdateRequest) Reset() {
	*x = BatchUpsertItemRequest_ItemPropertyUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpsertItemRequest_ItemPropertyUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpsertItemRequest_ItemPropertyUpdateRequest) ProtoMessage() {}

func (x *BatchUpsertItemRequest_ItemPropertyUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpsertItemRequest_ItemPropertyUpdateRequest.ProtoReflect.Descriptor instead.
func (*BatchUpsertItemRequest_ItemPropertyUpdateRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{0, 2}
}

func (x *BatchUpsertItemRequest_ItemPropertyUpdateRequest) GetPropertyPath() string {
	if x != nil {
		return x.PropertyPath
	}
	return ""
}

func (x *BatchUpsertItemRequest_ItemPropertyUpdateRequest) GetPropertyValue() string {
	if x != nil {
		return x.PropertyValue
	}
	return ""
}

type QueryItemRequest_QueryItemQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rarities *QueryItemRequest_RarityQuery `protobuf:"bytes,1,opt,name=rarities,proto3" json:"rarities,omitempty"`
	// Types that are assignable to CategoryQueries:
	//	*QueryItemRequest_QueryItemQuery_Category
	//	*QueryItemRequest_QueryItemQuery_ParentCategory
	CategoryQueries isQueryItemRequest_QueryItemQuery_CategoryQueries `protobuf_oneof:"category_queries"`
}

func (x *QueryItemRequest_QueryItemQuery) Reset() {
	*x = QueryItemRequest_QueryItemQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryItemRequest_QueryItemQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryItemRequest_QueryItemQuery) ProtoMessage() {}

func (x *QueryItemRequest_QueryItemQuery) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryItemRequest_QueryItemQuery.ProtoReflect.Descriptor instead.
func (*QueryItemRequest_QueryItemQuery) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{1, 0}
}

func (x *QueryItemRequest_QueryItemQuery) GetRarities() *QueryItemRequest_RarityQuery {
	if x != nil {
		return x.Rarities
	}
	return nil
}

func (m *QueryItemRequest_QueryItemQuery) GetCategoryQueries() isQueryItemRequest_QueryItemQuery_CategoryQueries {
	if m != nil {
		return m.CategoryQueries
	}
	return nil
}

func (x *QueryItemRequest_QueryItemQuery) GetCategory() *QueryItemRequest_CategoryCodeQuery {
	if x, ok := x.GetCategoryQueries().(*QueryItemRequest_QueryItemQuery_Category); ok {
		return x.Category
	}
	return nil
}

func (x *QueryItemRequest_QueryItemQuery) GetParentCategory() *QueryItemRequest_CategoryCodeQuery {
	if x, ok := x.GetCategoryQueries().(*QueryItemRequest_QueryItemQuery_ParentCategory); ok {
		return x.ParentCategory
	}
	return nil
}

type isQueryItemRequest_QueryItemQuery_CategoryQueries interface {
	isQueryItemRequest_QueryItemQuery_CategoryQueries()
}

type QueryItemRequest_QueryItemQuery_Category struct {
	Category *QueryItemRequest_CategoryCodeQuery `protobuf:"bytes,2,opt,name=category,proto3,oneof"`
}

type QueryItemRequest_QueryItemQuery_ParentCategory struct {
	ParentCategory *QueryItemRequest_CategoryCodeQuery `protobuf:"bytes,3,opt,name=parent_category,json=parentCategory,proto3,oneof"`
}

func (*QueryItemRequest_QueryItemQuery_Category) isQueryItemRequest_QueryItemQuery_CategoryQueries() {
}

func (*QueryItemRequest_QueryItemQuery_ParentCategory) isQueryItemRequest_QueryItemQuery_CategoryQueries() {
}

type QueryItemRequest_CategoryCodeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code []string `protobuf:"bytes,1,rep,name=code,proto3" json:"code,omitempty"`
}

func (x *QueryItemRequest_CategoryCodeQuery) Reset() {
	*x = QueryItemRequest_CategoryCodeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryItemRequest_CategoryCodeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryItemRequest_CategoryCodeQuery) ProtoMessage() {}

func (x *QueryItemRequest_CategoryCodeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryItemRequest_CategoryCodeQuery.ProtoReflect.Descriptor instead.
func (*QueryItemRequest_CategoryCodeQuery) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{1, 1}
}

func (x *QueryItemRequest_CategoryCodeQuery) GetCode() []string {
	if x != nil {
		return x.Code
	}
	return nil
}

type QueryItemRequest_RarityQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rarities []domain1.Rarity `protobuf:"varint,1,rep,packed,name=rarities,proto3,enum=Rarity" json:"rarities,omitempty"`
}

func (x *QueryItemRequest_RarityQuery) Reset() {
	*x = QueryItemRequest_RarityQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryItemRequest_RarityQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryItemRequest_RarityQuery) ProtoMessage() {}

func (x *QueryItemRequest_RarityQuery) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryItemRequest_RarityQuery.ProtoReflect.Descriptor instead.
func (*QueryItemRequest_RarityQuery) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{1, 2}
}

func (x *QueryItemRequest_RarityQuery) GetRarities() []domain1.Rarity {
	if x != nil {
		return x.Rarities
	}
	return nil
}

var File_item_proto protoreflect.FileDescriptor

var file_item_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x1a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb9, 0x06, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xa6, 0x03, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e,
	0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x0e, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0d, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x5b, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a,
	0xc1, 0x01, 0x0a, 0x1d, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a,
	0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x1a, 0x67, 0x0a, 0x19, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb0, 0x04, 0x0a,
	0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x40, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x3c, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a,
	0x90, 0x02, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x08, 0x72,
	0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0e,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x12,
	0x0a, 0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x1a, 0x27, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x32, 0x0a, 0x0b, 0x52,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x08, 0x72, 0x61,
	0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x52,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x72, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x74, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x46, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2f, 0x0a,
	0x10, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xf7,
	0x01, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49,
	0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x21, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x95, 0x01, 0x0a, 0x20, 0x69, 0x6f, 0x2e,
	0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x42, 0x09, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x6f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x74, 0x65, 0x6d,
	0xaa, 0x02, 0x1d, 0x4d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_item_proto_rawDescOnce sync.Once
	file_item_proto_rawDescData = file_item_proto_rawDesc
)

func file_item_proto_rawDescGZIP() []byte {
	file_item_proto_rawDescOnce.Do(func() {
		file_item_proto_rawDescData = protoimpl.X.CompressGZIP(file_item_proto_rawDescData)
	})
	return file_item_proto_rawDescData
}

var file_item_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_item_proto_goTypes = []interface{}{
	(*BatchUpsertItemRequest)(nil),                               // 0: item.item.BatchUpsertItemRequest
	(*QueryItemRequest)(nil),                                     // 1: item.item.QueryItemRequest
	(*ExternalIdRequest)(nil),                                    // 2: item.item.ExternalIdRequest
	(*QueryItemResponse)(nil),                                    // 3: item.item.QueryItemResponse
	(*ItemResponseList)(nil),                                     // 4: item.item.ItemResponseList
	(*BatchUpsertItemRequest_ItemUpdateRequest)(nil),             // 5: item.item.BatchUpsertItemRequest.ItemUpdateRequest
	(*BatchUpsertItemRequest_ItemSingleOptionUpdateRequest)(nil), // 6: item.item.BatchUpsertItemRequest.ItemSingleOptionUpdateRequest
	(*BatchUpsertItemRequest_ItemPropertyUpdateRequest)(nil),     // 7: item.item.BatchUpsertItemRequest.ItemPropertyUpdateRequest
	(*QueryItemRequest_QueryItemQuery)(nil),                      // 8: item.item.QueryItemRequest.QueryItemQuery
	(*QueryItemRequest_CategoryCodeQuery)(nil),                   // 9: item.item.QueryItemRequest.CategoryCodeQuery
	(*QueryItemRequest_RarityQuery)(nil),                         // 10: item.item.QueryItemRequest.RarityQuery
	(*paging.Pageable)(nil),                                      // 11: common.Pageable
	(*domain.ItemFetchDirective)(nil),                            // 12: ItemFetchDirective
	(*domain.Item)(nil),                                          // 13: Item
	(domain1.Rarity)(0),                                          // 14: Rarity
	(*domain.ResourceUpsert)(nil),                                // 15: ResourceUpsert
	(common.OptionType)(0),                                       // 16: OptionType
	(*emptypb.Empty)(nil),                                        // 17: google.protobuf.Empty
}
var file_item_proto_depIdxs = []int32{
	5,  // 0: item.item.BatchUpsertItemRequest.items:type_name -> item.item.BatchUpsertItemRequest.ItemUpdateRequest
	11, // 1: item.item.QueryItemRequest.pageable:type_name -> common.Pageable
	8,  // 2: item.item.QueryItemRequest.query:type_name -> item.item.QueryItemRequest.QueryItemQuery
	12, // 3: item.item.QueryItemRequest.fetch_directive:type_name -> ItemFetchDirective
	12, // 4: item.item.ExternalIdRequest.fetch_directive:type_name -> ItemFetchDirective
	13, // 5: item.item.QueryItemResponse.items:type_name -> Item
	13, // 6: item.item.ItemResponseList.items:type_name -> Item
	14, // 7: item.item.BatchUpsertItemRequest.ItemUpdateRequest.rarity:type_name -> Rarity
	15, // 8: item.item.BatchUpsertItemRequest.ItemUpdateRequest.resources:type_name -> ResourceUpsert
	6,  // 9: item.item.BatchUpsertItemRequest.ItemUpdateRequest.single_options:type_name -> item.item.BatchUpsertItemRequest.ItemSingleOptionUpdateRequest
	7,  // 10: item.item.BatchUpsertItemRequest.ItemUpdateRequest.properties:type_name -> item.item.BatchUpsertItemRequest.ItemPropertyUpdateRequest
	16, // 11: item.item.BatchUpsertItemRequest.ItemSingleOptionUpdateRequest.option_type:type_name -> OptionType
	10, // 12: item.item.QueryItemRequest.QueryItemQuery.rarities:type_name -> item.item.QueryItemRequest.RarityQuery
	9,  // 13: item.item.QueryItemRequest.QueryItemQuery.category:type_name -> item.item.QueryItemRequest.CategoryCodeQuery
	9,  // 14: item.item.QueryItemRequest.QueryItemQuery.parent_category:type_name -> item.item.QueryItemRequest.CategoryCodeQuery
	14, // 15: item.item.QueryItemRequest.RarityQuery.rarities:type_name -> Rarity
	1,  // 16: item.item.ItemService.QueryItems:input_type -> item.item.QueryItemRequest
	2,  // 17: item.item.ItemService.GetItemByIds:input_type -> item.item.ExternalIdRequest
	0,  // 18: item.item.ItemService.UpsertItemInBatch:input_type -> item.item.BatchUpsertItemRequest
	3,  // 19: item.item.ItemService.QueryItems:output_type -> item.item.QueryItemResponse
	4,  // 20: item.item.ItemService.GetItemByIds:output_type -> item.item.ItemResponseList
	17, // 21: item.item.ItemService.UpsertItemInBatch:output_type -> google.protobuf.Empty
	19, // [19:22] is the sub-list for method output_type
	16, // [16:19] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_item_proto_init() }
func file_item_proto_init() {
	if File_item_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_item_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpsertItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemResponseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpsertItemRequest_ItemUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpsertItemRequest_ItemSingleOptionUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpsertItemRequest_ItemPropertyUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryItemRequest_QueryItemQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryItemRequest_CategoryCodeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryItemRequest_RarityQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_item_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*QueryItemRequest_QueryItemQuery_Category)(nil),
		(*QueryItemRequest_QueryItemQuery_ParentCategory)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_item_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_item_proto_goTypes,
		DependencyIndexes: file_item_proto_depIdxs,
		MessageInfos:      file_item_proto_msgTypes,
	}.Build()
	File_item_proto = out.File
	file_item_proto_rawDesc = nil
	file_item_proto_goTypes = nil
	file_item_proto_depIdxs = nil
}
