// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: friendship.proto

package friendship

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	domain1 "gitlab.com/muziverse/common/protogogenerator/avatar-proto-api/pkg/domain"
	domain "gitlab.com/muziverse/common/protogogenerator/friendship-proto-api/pkg/domain"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *SendInvitationRequest) Reset() {
	*x = SendInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friendship_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInvitationRequest) ProtoMessage() {}

func (x *SendInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_friendship_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInvitationRequest.ProtoReflect.Descriptor instead.
func (*SendInvitationRequest) Descriptor() ([]byte, []int) {
	return file_friendship_proto_rawDescGZIP(), []int{0}
}

func (x *SendInvitationRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type ReplyInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendshipId int64                        `protobuf:"varint,1,opt,name=friendship_id,json=friendshipId,proto3" json:"friendship_id,omitempty"`
	ReplyAction  domain.FriendshipReplyAction `protobuf:"varint,2,opt,name=reply_action,json=replyAction,proto3,enum=FriendshipReplyAction" json:"reply_action,omitempty"`
}

func (x *ReplyInvitationRequest) Reset() {
	*x = ReplyInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friendship_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInvitationRequest) ProtoMessage() {}

func (x *ReplyInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_friendship_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInvitationRequest.ProtoReflect.Descriptor instead.
func (*ReplyInvitationRequest) Descriptor() ([]byte, []int) {
	return file_friendship_proto_rawDescGZIP(), []int{1}
}

func (x *ReplyInvitationRequest) GetFriendshipId() int64 {
	if x != nil {
		return x.FriendshipId
	}
	return 0
}

func (x *ReplyInvitationRequest) GetReplyAction() domain.FriendshipReplyAction {
	if x != nil {
		return x.ReplyAction
	}
	return domain.FriendshipReplyAction(0)
}

type ChangeFriendshipStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendshipId  int64                          `protobuf:"varint,1,opt,name=friendship_id,json=friendshipId,proto3" json:"friendship_id,omitempty"`
	RequestAction domain.FriendshipRequestAction `protobuf:"varint,2,opt,name=request_action,json=requestAction,proto3,enum=FriendshipRequestAction" json:"request_action,omitempty"`
}

func (x *ChangeFriendshipStatusRequest) Reset() {
	*x = ChangeFriendshipStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friendship_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeFriendshipStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeFriendshipStatusRequest) ProtoMessage() {}

func (x *ChangeFriendshipStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_friendship_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeFriendshipStatusRequest.ProtoReflect.Descriptor instead.
func (*ChangeFriendshipStatusRequest) Descriptor() ([]byte, []int) {
	return file_friendship_proto_rawDescGZIP(), []int{2}
}

func (x *ChangeFriendshipStatusRequest) GetFriendshipId() int64 {
	if x != nil {
		return x.FriendshipId
	}
	return 0
}

func (x *ChangeFriendshipStatusRequest) GetRequestAction() domain.FriendshipRequestAction {
	if x != nil {
		return x.RequestAction
	}
	return domain.FriendshipRequestAction(0)
}

type CheckFriendshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *CheckFriendshipRequest) Reset() {
	*x = CheckFriendshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friendship_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFriendshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFriendshipRequest) ProtoMessage() {}

func (x *CheckFriendshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_friendship_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFriendshipRequest.ProtoReflect.Descriptor instead.
func (*CheckFriendshipRequest) Descriptor() ([]byte, []int) {
	return file_friendship_proto_rawDescGZIP(), []int{3}
}

func (x *CheckFriendshipRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type ListInvitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sent     []*FriendShipResponse `protobuf:"bytes,1,rep,name=sent,proto3" json:"sent,omitempty"`
	Received []*FriendShipResponse `protobuf:"bytes,2,rep,name=received,proto3" json:"received,omitempty"`
}

func (x *ListInvitationResponse) Reset() {
	*x = ListInvitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friendship_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvitationResponse) ProtoMessage() {}

func (x *ListInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_friendship_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvitationResponse.ProtoReflect.Descriptor instead.
func (*ListInvitationResponse) Descriptor() ([]byte, []int) {
	return file_friendship_proto_rawDescGZIP(), []int{4}
}

func (x *ListInvitationResponse) GetSent() []*FriendShipResponse {
	if x != nil {
		return x.Sent
	}
	return nil
}

func (x *ListInvitationResponse) GetReceived() []*FriendShipResponse {
	if x != nil {
		return x.Received
	}
	return nil
}

type FriendShipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendshipId     int64                       `protobuf:"varint,1,opt,name=friendship_id,json=friendshipId,proto3" json:"friendship_id,omitempty"`
	FriendshipStatus domain.FriendshipStatus     `protobuf:"varint,2,opt,name=friendship_status,json=friendshipStatus,proto3,enum=FriendshipStatus" json:"friendship_status,omitempty"`
	AvatarPresence   domain.AvatarPresence       `protobuf:"varint,3,opt,name=avatar_presence,json=avatarPresence,proto3,enum=AvatarPresence" json:"avatar_presence,omitempty"`
	AvatarInfo       *domain1.AvatarInfoResponse `protobuf:"bytes,4,opt,name=avatar_info,json=avatarInfo,proto3" json:"avatar_info,omitempty"`
}

func (x *FriendShipResponse) Reset() {
	*x = FriendShipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friendship_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendShipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendShipResponse) ProtoMessage() {}

func (x *FriendShipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_friendship_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendShipResponse.ProtoReflect.Descriptor instead.
func (*FriendShipResponse) Descriptor() ([]byte, []int) {
	return file_friendship_proto_rawDescGZIP(), []int{5}
}

func (x *FriendShipResponse) GetFriendshipId() int64 {
	if x != nil {
		return x.FriendshipId
	}
	return 0
}

func (x *FriendShipResponse) GetFriendshipStatus() domain.FriendshipStatus {
	if x != nil {
		return x.FriendshipStatus
	}
	return domain.FriendshipStatus(0)
}

func (x *FriendShipResponse) GetAvatarPresence() domain.AvatarPresence {
	if x != nil {
		return x.AvatarPresence
	}
	return domain.AvatarPresence(0)
}

func (x *FriendShipResponse) GetAvatarInfo() *domain1.AvatarInfoResponse {
	if x != nil {
		return x.AvatarInfo
	}
	return nil
}

type CheckFriendshipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendshipId     int64                   `protobuf:"varint,1,opt,name=friendship_id,json=friendshipId,proto3" json:"friendship_id,omitempty"`
	FriendshipStatus domain.FriendshipStatus `protobuf:"varint,2,opt,name=friendship_status,json=friendshipStatus,proto3,enum=FriendshipStatus" json:"friendship_status,omitempty"`
}

func (x *CheckFriendshipResponse) Reset() {
	*x = CheckFriendshipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friendship_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFriendshipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFriendshipResponse) ProtoMessage() {}

func (x *CheckFriendshipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_friendship_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFriendshipResponse.ProtoReflect.Descriptor instead.
func (*CheckFriendshipResponse) Descriptor() ([]byte, []int) {
	return file_friendship_proto_rawDescGZIP(), []int{6}
}

func (x *CheckFriendshipResponse) GetFriendshipId() int64 {
	if x != nil {
		return x.FriendshipId
	}
	return 0
}

func (x *CheckFriendshipResponse) GetFriendshipStatus() domain.FriendshipStatus {
	if x != nil {
		return x.FriendshipStatus
	}
	return domain.FriendshipStatus(0)
}

var File_friendship_proto protoreflect.FileDescriptor

var file_friendship_proto_rawDesc = []byte{
	0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x1a, 0x1e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x15, 0x53, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x22, 0x78, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x16, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x53, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x73, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x12,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7e, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xf6, 0x03, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a,
	0x0e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2c, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x66, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6b, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x12, 0x2d, 0x2e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2d, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0xca, 0x01, 0x0a, 0x2c, 0x69, 0x6f, 0x2e, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0x42, 0x16, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x54, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x6f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x68, 0x69, 0x70, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0xaa, 0x02, 0x29, 0x4d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x41,
	0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_friendship_proto_rawDescOnce sync.Once
	file_friendship_proto_rawDescData = file_friendship_proto_rawDesc
)

func file_friendship_proto_rawDescGZIP() []byte {
	file_friendship_proto_rawDescOnce.Do(func() {
		file_friendship_proto_rawDescData = protoimpl.X.CompressGZIP(file_friendship_proto_rawDescData)
	})
	return file_friendship_proto_rawDescData
}

var file_friendship_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_friendship_proto_goTypes = []interface{}{
	(*SendInvitationRequest)(nil),         // 0: friendship.friendship.SendInvitationRequest
	(*ReplyInvitationRequest)(nil),        // 1: friendship.friendship.ReplyInvitationRequest
	(*ChangeFriendshipStatusRequest)(nil), // 2: friendship.friendship.ChangeFriendshipStatusRequest
	(*CheckFriendshipRequest)(nil),        // 3: friendship.friendship.CheckFriendshipRequest
	(*ListInvitationResponse)(nil),        // 4: friendship.friendship.ListInvitationResponse
	(*FriendShipResponse)(nil),            // 5: friendship.friendship.FriendShipResponse
	(*CheckFriendshipResponse)(nil),       // 6: friendship.friendship.CheckFriendshipResponse
	(domain.FriendshipReplyAction)(0),     // 7: FriendshipReplyAction
	(domain.FriendshipRequestAction)(0),   // 8: FriendshipRequestAction
	(domain.FriendshipStatus)(0),          // 9: FriendshipStatus
	(domain.AvatarPresence)(0),            // 10: AvatarPresence
	(*domain1.AvatarInfoResponse)(nil),    // 11: AvatarInfoResponse
	(*emptypb.Empty)(nil),                 // 12: google.protobuf.Empty
}
var file_friendship_proto_depIdxs = []int32{
	7,  // 0: friendship.friendship.ReplyInvitationRequest.reply_action:type_name -> FriendshipReplyAction
	8,  // 1: friendship.friendship.ChangeFriendshipStatusRequest.request_action:type_name -> FriendshipRequestAction
	5,  // 2: friendship.friendship.ListInvitationResponse.sent:type_name -> friendship.friendship.FriendShipResponse
	5,  // 3: friendship.friendship.ListInvitationResponse.received:type_name -> friendship.friendship.FriendShipResponse
	9,  // 4: friendship.friendship.FriendShipResponse.friendship_status:type_name -> FriendshipStatus
	10, // 5: friendship.friendship.FriendShipResponse.avatar_presence:type_name -> AvatarPresence
	11, // 6: friendship.friendship.FriendShipResponse.avatar_info:type_name -> AvatarInfoResponse
	9,  // 7: friendship.friendship.CheckFriendshipResponse.friendship_status:type_name -> FriendshipStatus
	0,  // 8: friendship.friendship.FriendshipService.SendInvitation:input_type -> friendship.friendship.SendInvitationRequest
	1,  // 9: friendship.friendship.FriendshipService.ReplyInvitation:input_type -> friendship.friendship.ReplyInvitationRequest
	2,  // 10: friendship.friendship.FriendshipService.ChangeFriendshipStatus:input_type -> friendship.friendship.ChangeFriendshipStatusRequest
	3,  // 11: friendship.friendship.FriendshipService.CheckFriendship:input_type -> friendship.friendship.CheckFriendshipRequest
	12, // 12: friendship.friendship.FriendshipService.GetListInvitation:input_type -> google.protobuf.Empty
	12, // 13: friendship.friendship.FriendshipService.SendInvitation:output_type -> google.protobuf.Empty
	12, // 14: friendship.friendship.FriendshipService.ReplyInvitation:output_type -> google.protobuf.Empty
	12, // 15: friendship.friendship.FriendshipService.ChangeFriendshipStatus:output_type -> google.protobuf.Empty
	5,  // 16: friendship.friendship.FriendshipService.CheckFriendship:output_type -> friendship.friendship.FriendShipResponse
	4,  // 17: friendship.friendship.FriendshipService.GetListInvitation:output_type -> friendship.friendship.ListInvitationResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_friendship_proto_init() }
func file_friendship_proto_init() {
	if File_friendship_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_friendship_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friendship_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friendship_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeFriendshipStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friendship_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFriendshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friendship_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInvitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friendship_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendShipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friendship_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFriendshipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_friendship_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_friendship_proto_goTypes,
		DependencyIndexes: file_friendship_proto_depIdxs,
		MessageInfos:      file_friendship_proto_msgTypes,
	}.Build()
	File_friendship_proto = out.File
	file_friendship_proto_rawDesc = nil
	file_friendship_proto_goTypes = nil
	file_friendship_proto_depIdxs = nil
}
