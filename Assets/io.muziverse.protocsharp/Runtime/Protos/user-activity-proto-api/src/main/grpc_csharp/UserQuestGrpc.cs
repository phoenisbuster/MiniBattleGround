// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: user_quest.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Useractivity.Quest {
  public static partial class UserQuestService
  {
    static readonly string __ServiceName = "useractivity.quest.UserQuestService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.ClaimRewardsRequest> __Marshaller_useractivity_quest_ClaimRewardsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.ClaimRewardsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.ClaimRewardsResponse> __Marshaller_useractivity_quest_ClaimRewardsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.ClaimRewardsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.GetClaimRewardsHistoryRequest> __Marshaller_useractivity_quest_GetClaimRewardsHistoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.GetClaimRewardsHistoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.GetClaimRewardsHistoryResponse> __Marshaller_useractivity_quest_GetClaimRewardsHistoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.GetClaimRewardsHistoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.GetLoginQuestProgressRequest> __Marshaller_useractivity_quest_GetLoginQuestProgressRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.GetLoginQuestProgressRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.GetLoginQuestProgressResponse> __Marshaller_useractivity_quest_GetLoginQuestProgressResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.GetLoginQuestProgressResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.PickQuestRequest> __Marshaller_useractivity_quest_PickQuestRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.PickQuestRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.PickQuestResponse> __Marshaller_useractivity_quest_PickQuestResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.PickQuestResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.ListPickQuestResponse> __Marshaller_useractivity_quest_ListPickQuestResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.ListPickQuestResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Useractivity.Quest.ChangePickedQuestStatusRequest> __Marshaller_useractivity_quest_ChangePickedQuestStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Useractivity.Quest.ChangePickedQuestStatusRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Useractivity.Quest.ClaimRewardsRequest, global::Useractivity.Quest.ClaimRewardsResponse> __Method_ClaimRewards = new grpc::Method<global::Useractivity.Quest.ClaimRewardsRequest, global::Useractivity.Quest.ClaimRewardsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClaimRewards",
        __Marshaller_useractivity_quest_ClaimRewardsRequest,
        __Marshaller_useractivity_quest_ClaimRewardsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Useractivity.Quest.GetClaimRewardsHistoryRequest, global::Useractivity.Quest.GetClaimRewardsHistoryResponse> __Method_GetClaimRewardsHistory = new grpc::Method<global::Useractivity.Quest.GetClaimRewardsHistoryRequest, global::Useractivity.Quest.GetClaimRewardsHistoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClaimRewardsHistory",
        __Marshaller_useractivity_quest_GetClaimRewardsHistoryRequest,
        __Marshaller_useractivity_quest_GetClaimRewardsHistoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Useractivity.Quest.GetLoginQuestProgressRequest, global::Useractivity.Quest.GetLoginQuestProgressResponse> __Method_GetLoginQuestProgress = new grpc::Method<global::Useractivity.Quest.GetLoginQuestProgressRequest, global::Useractivity.Quest.GetLoginQuestProgressResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLoginQuestProgress",
        __Marshaller_useractivity_quest_GetLoginQuestProgressRequest,
        __Marshaller_useractivity_quest_GetLoginQuestProgressResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Useractivity.Quest.PickQuestRequest, global::Useractivity.Quest.PickQuestResponse> __Method_PickQuest = new grpc::Method<global::Useractivity.Quest.PickQuestRequest, global::Useractivity.Quest.PickQuestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PickQuest",
        __Marshaller_useractivity_quest_PickQuestRequest,
        __Marshaller_useractivity_quest_PickQuestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Useractivity.Quest.ListPickQuestResponse> __Method_GetPickedQuests = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Useractivity.Quest.ListPickQuestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPickedQuests",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_useractivity_quest_ListPickQuestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Useractivity.Quest.ChangePickedQuestStatusRequest, global::Useractivity.Quest.PickQuestResponse> __Method_ChangePickedQuestStatus = new grpc::Method<global::Useractivity.Quest.ChangePickedQuestStatusRequest, global::Useractivity.Quest.PickQuestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangePickedQuestStatus",
        __Marshaller_useractivity_quest_ChangePickedQuestStatusRequest,
        __Marshaller_useractivity_quest_PickQuestResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Useractivity.Quest.UserQuestReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserQuestService</summary>
    [grpc::BindServiceMethod(typeof(UserQuestService), "BindService")]
    public abstract partial class UserQuestServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Useractivity.Quest.ClaimRewardsResponse> ClaimRewards(global::Useractivity.Quest.ClaimRewardsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Useractivity.Quest.GetClaimRewardsHistoryResponse> GetClaimRewardsHistory(global::Useractivity.Quest.GetClaimRewardsHistoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Useractivity.Quest.GetLoginQuestProgressResponse> GetLoginQuestProgress(global::Useractivity.Quest.GetLoginQuestProgressRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Useractivity.Quest.PickQuestResponse> PickQuest(global::Useractivity.Quest.PickQuestRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Useractivity.Quest.ListPickQuestResponse> GetPickedQuests(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Useractivity.Quest.PickQuestResponse> ChangePickedQuestStatus(global::Useractivity.Quest.ChangePickedQuestStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UserQuestService</summary>
    public partial class UserQuestServiceClient : grpc::ClientBase<UserQuestServiceClient>
    {
      /// <summary>Creates a new client for UserQuestService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UserQuestServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserQuestService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UserQuestServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UserQuestServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UserQuestServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.ClaimRewardsResponse ClaimRewards(global::Useractivity.Quest.ClaimRewardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClaimRewards(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.ClaimRewardsResponse ClaimRewards(global::Useractivity.Quest.ClaimRewardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClaimRewards, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.ClaimRewardsResponse> ClaimRewardsAsync(global::Useractivity.Quest.ClaimRewardsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClaimRewardsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.ClaimRewardsResponse> ClaimRewardsAsync(global::Useractivity.Quest.ClaimRewardsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClaimRewards, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.GetClaimRewardsHistoryResponse GetClaimRewardsHistory(global::Useractivity.Quest.GetClaimRewardsHistoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClaimRewardsHistory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.GetClaimRewardsHistoryResponse GetClaimRewardsHistory(global::Useractivity.Quest.GetClaimRewardsHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClaimRewardsHistory, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.GetClaimRewardsHistoryResponse> GetClaimRewardsHistoryAsync(global::Useractivity.Quest.GetClaimRewardsHistoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClaimRewardsHistoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.GetClaimRewardsHistoryResponse> GetClaimRewardsHistoryAsync(global::Useractivity.Quest.GetClaimRewardsHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClaimRewardsHistory, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.GetLoginQuestProgressResponse GetLoginQuestProgress(global::Useractivity.Quest.GetLoginQuestProgressRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLoginQuestProgress(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.GetLoginQuestProgressResponse GetLoginQuestProgress(global::Useractivity.Quest.GetLoginQuestProgressRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLoginQuestProgress, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.GetLoginQuestProgressResponse> GetLoginQuestProgressAsync(global::Useractivity.Quest.GetLoginQuestProgressRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLoginQuestProgressAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.GetLoginQuestProgressResponse> GetLoginQuestProgressAsync(global::Useractivity.Quest.GetLoginQuestProgressRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLoginQuestProgress, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.PickQuestResponse PickQuest(global::Useractivity.Quest.PickQuestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PickQuest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.PickQuestResponse PickQuest(global::Useractivity.Quest.PickQuestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PickQuest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.PickQuestResponse> PickQuestAsync(global::Useractivity.Quest.PickQuestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PickQuestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.PickQuestResponse> PickQuestAsync(global::Useractivity.Quest.PickQuestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PickQuest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.ListPickQuestResponse GetPickedQuests(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPickedQuests(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.ListPickQuestResponse GetPickedQuests(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPickedQuests, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.ListPickQuestResponse> GetPickedQuestsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPickedQuestsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.ListPickQuestResponse> GetPickedQuestsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPickedQuests, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.PickQuestResponse ChangePickedQuestStatus(global::Useractivity.Quest.ChangePickedQuestStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangePickedQuestStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Useractivity.Quest.PickQuestResponse ChangePickedQuestStatus(global::Useractivity.Quest.ChangePickedQuestStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangePickedQuestStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.PickQuestResponse> ChangePickedQuestStatusAsync(global::Useractivity.Quest.ChangePickedQuestStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangePickedQuestStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Useractivity.Quest.PickQuestResponse> ChangePickedQuestStatusAsync(global::Useractivity.Quest.ChangePickedQuestStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangePickedQuestStatus, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override UserQuestServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserQuestServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(UserQuestServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ClaimRewards, serviceImpl.ClaimRewards)
          .AddMethod(__Method_GetClaimRewardsHistory, serviceImpl.GetClaimRewardsHistory)
          .AddMethod(__Method_GetLoginQuestProgress, serviceImpl.GetLoginQuestProgress)
          .AddMethod(__Method_PickQuest, serviceImpl.PickQuest)
          .AddMethod(__Method_GetPickedQuests, serviceImpl.GetPickedQuests)
          .AddMethod(__Method_ChangePickedQuestStatus, serviceImpl.ChangePickedQuestStatus).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UserQuestServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ClaimRewards, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Useractivity.Quest.ClaimRewardsRequest, global::Useractivity.Quest.ClaimRewardsResponse>(serviceImpl.ClaimRewards));
      serviceBinder.AddMethod(__Method_GetClaimRewardsHistory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Useractivity.Quest.GetClaimRewardsHistoryRequest, global::Useractivity.Quest.GetClaimRewardsHistoryResponse>(serviceImpl.GetClaimRewardsHistory));
      serviceBinder.AddMethod(__Method_GetLoginQuestProgress, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Useractivity.Quest.GetLoginQuestProgressRequest, global::Useractivity.Quest.GetLoginQuestProgressResponse>(serviceImpl.GetLoginQuestProgress));
      serviceBinder.AddMethod(__Method_PickQuest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Useractivity.Quest.PickQuestRequest, global::Useractivity.Quest.PickQuestResponse>(serviceImpl.PickQuest));
      serviceBinder.AddMethod(__Method_GetPickedQuests, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Useractivity.Quest.ListPickQuestResponse>(serviceImpl.GetPickedQuests));
      serviceBinder.AddMethod(__Method_ChangePickedQuestStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Useractivity.Quest.ChangePickedQuestStatusRequest, global::Useractivity.Quest.PickQuestResponse>(serviceImpl.ChangePickedQuestStatus));
    }

  }
}
#endregion
