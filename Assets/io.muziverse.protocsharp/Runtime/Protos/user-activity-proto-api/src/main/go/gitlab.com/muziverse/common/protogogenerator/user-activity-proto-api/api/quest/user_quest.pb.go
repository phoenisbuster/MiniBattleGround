// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: user_quest.proto

package quest

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	domain "gitlab.com/muziverse/common/protogogenerator/game-content-proto-api/domain"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserQuestStatus int32

const (
	UserQuestStatus_PICKED      UserQuestStatus = 0
	UserQuestStatus_IN_PROGRESS UserQuestStatus = 1
	UserQuestStatus_COMPLETED   UserQuestStatus = 2
	UserQuestStatus_CLOSED      UserQuestStatus = 3
)

// Enum value maps for UserQuestStatus.
var (
	UserQuestStatus_name = map[int32]string{
		0: "PICKED",
		1: "IN_PROGRESS",
		2: "COMPLETED",
		3: "CLOSED",
	}
	UserQuestStatus_value = map[string]int32{
		"PICKED":      0,
		"IN_PROGRESS": 1,
		"COMPLETED":   2,
		"CLOSED":      3,
	}
)

func (x UserQuestStatus) Enum() *UserQuestStatus {
	p := new(UserQuestStatus)
	*p = x
	return p
}

func (x UserQuestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserQuestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_user_quest_proto_enumTypes[0].Descriptor()
}

func (UserQuestStatus) Type() protoreflect.EnumType {
	return &file_user_quest_proto_enumTypes[0]
}

func (x UserQuestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserQuestStatus.Descriptor instead.
func (UserQuestStatus) EnumDescriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{0}
}

type PickQuestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestId    int64  `protobuf:"varint,1,opt,name=quest_id,json=questId,proto3" json:"quest_id,omitempty"`
	ZoneOffset string `protobuf:"bytes,2,opt,name=zone_offset,json=zoneOffset,proto3" json:"zone_offset,omitempty"`
}

func (x *PickQuestRequest) Reset() {
	*x = PickQuestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickQuestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickQuestRequest) ProtoMessage() {}

func (x *PickQuestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickQuestRequest.ProtoReflect.Descriptor instead.
func (*PickQuestRequest) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{0}
}

func (x *PickQuestRequest) GetQuestId() int64 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *PickQuestRequest) GetZoneOffset() string {
	if x != nil {
		return x.ZoneOffset
	}
	return ""
}

type ClaimRewardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestId    int64  `protobuf:"varint,1,opt,name=quest_id,json=questId,proto3" json:"quest_id,omitempty"`
	ZoneOffset string `protobuf:"bytes,2,opt,name=zone_offset,json=zoneOffset,proto3" json:"zone_offset,omitempty"`
}

func (x *ClaimRewardsRequest) Reset() {
	*x = ClaimRewardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimRewardsRequest) ProtoMessage() {}

func (x *ClaimRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimRewardsRequest.ProtoReflect.Descriptor instead.
func (*ClaimRewardsRequest) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{1}
}

func (x *ClaimRewardsRequest) GetQuestId() int64 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *ClaimRewardsRequest) GetZoneOffset() string {
	if x != nil {
		return x.ZoneOffset
	}
	return ""
}

type GetLoginQuestProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneOffset string `protobuf:"bytes,1,opt,name=zone_offset,json=zoneOffset,proto3" json:"zone_offset,omitempty"`
}

func (x *GetLoginQuestProgressRequest) Reset() {
	*x = GetLoginQuestProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginQuestProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginQuestProgressRequest) ProtoMessage() {}

func (x *GetLoginQuestProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginQuestProgressRequest.ProtoReflect.Descriptor instead.
func (*GetLoginQuestProgressRequest) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{2}
}

func (x *GetLoginQuestProgressRequest) GetZoneOffset() string {
	if x != nil {
		return x.ZoneOffset
	}
	return ""
}

type ClaimRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestId int64             `protobuf:"varint,1,opt,name=quest_id,json=questId,proto3" json:"quest_id,omitempty"`
	Rewards []*domain.Rewards `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *ClaimRewardsResponse) Reset() {
	*x = ClaimRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimRewardsResponse) ProtoMessage() {}

func (x *ClaimRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimRewardsResponse.ProtoReflect.Descriptor instead.
func (*ClaimRewardsResponse) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{3}
}

func (x *ClaimRewardsResponse) GetQuestId() int64 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *ClaimRewardsResponse) GetRewards() []*domain.Rewards {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GetClaimRewardsHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type domain.QuestType `protobuf:"varint,1,opt,name=type,proto3,enum=QuestType" json:"type,omitempty"`
}

func (x *GetClaimRewardsHistoryRequest) Reset() {
	*x = GetClaimRewardsHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimRewardsHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimRewardsHistoryRequest) ProtoMessage() {}

func (x *GetClaimRewardsHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimRewardsHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetClaimRewardsHistoryRequest) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{4}
}

func (x *GetClaimRewardsHistoryRequest) GetType() domain.QuestType {
	if x != nil {
		return x.Type
	}
	return domain.QuestType(0)
}

type GetClaimRewardsHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History []*ClaimRewardsHistory `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
}

func (x *GetClaimRewardsHistoryResponse) Reset() {
	*x = GetClaimRewardsHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClaimRewardsHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimRewardsHistoryResponse) ProtoMessage() {}

func (x *GetClaimRewardsHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimRewardsHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetClaimRewardsHistoryResponse) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{5}
}

func (x *GetClaimRewardsHistoryResponse) GetHistory() []*ClaimRewardsHistory {
	if x != nil {
		return x.History
	}
	return nil
}

type ClaimRewardsHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestId     int64                  `protobuf:"varint,1,opt,name=questId,proto3" json:"questId,omitempty"`
	QuestType   domain.QuestType       `protobuf:"varint,2,opt,name=questType,proto3,enum=QuestType" json:"questType,omitempty"`
	QuestStatus domain.QuestStatus     `protobuf:"varint,3,opt,name=questStatus,proto3,enum=QuestStatus" json:"questStatus,omitempty"`
	Rewards     []*domain.Rewards      `protobuf:"bytes,4,rep,name=rewards,proto3" json:"rewards,omitempty"`
	ClaimedBy   string                 `protobuf:"bytes,5,opt,name=claimed_by,json=claimedBy,proto3" json:"claimed_by,omitempty"`
	ClaimedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=claimed_at,json=claimedAt,proto3" json:"claimed_at,omitempty"`
}

func (x *ClaimRewardsHistory) Reset() {
	*x = ClaimRewardsHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimRewardsHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimRewardsHistory) ProtoMessage() {}

func (x *ClaimRewardsHistory) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimRewardsHistory.ProtoReflect.Descriptor instead.
func (*ClaimRewardsHistory) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{6}
}

func (x *ClaimRewardsHistory) GetQuestId() int64 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *ClaimRewardsHistory) GetQuestType() domain.QuestType {
	if x != nil {
		return x.QuestType
	}
	return domain.QuestType(0)
}

func (x *ClaimRewardsHistory) GetQuestStatus() domain.QuestStatus {
	if x != nil {
		return x.QuestStatus
	}
	return domain.QuestStatus(0)
}

func (x *ClaimRewardsHistory) GetRewards() []*domain.Rewards {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ClaimRewardsHistory) GetClaimedBy() string {
	if x != nil {
		return x.ClaimedBy
	}
	return ""
}

func (x *ClaimRewardsHistory) GetClaimedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ClaimedAt
	}
	return nil
}

type PickQuestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestId   int64            `protobuf:"varint,1,opt,name=questId,proto3" json:"questId,omitempty"`
	QuestType domain.QuestType `protobuf:"varint,2,opt,name=questType,proto3,enum=QuestType" json:"questType,omitempty"`
	Status    UserQuestStatus  `protobuf:"varint,3,opt,name=status,proto3,enum=useractivity.quest.UserQuestStatus" json:"status,omitempty"`
}

func (x *PickQuestResponse) Reset() {
	*x = PickQuestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickQuestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickQuestResponse) ProtoMessage() {}

func (x *PickQuestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickQuestResponse.ProtoReflect.Descriptor instead.
func (*PickQuestResponse) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{7}
}

func (x *PickQuestResponse) GetQuestId() int64 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *PickQuestResponse) GetQuestType() domain.QuestType {
	if x != nil {
		return x.QuestType
	}
	return domain.QuestType(0)
}

func (x *PickQuestResponse) GetStatus() UserQuestStatus {
	if x != nil {
		return x.Status
	}
	return UserQuestStatus_PICKED
}

type ChangePickedQuestStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestId int64           `protobuf:"varint,1,opt,name=questId,proto3" json:"questId,omitempty"`
	Status  UserQuestStatus `protobuf:"varint,2,opt,name=status,proto3,enum=useractivity.quest.UserQuestStatus" json:"status,omitempty"`
}

func (x *ChangePickedQuestStatusRequest) Reset() {
	*x = ChangePickedQuestStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePickedQuestStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePickedQuestStatusRequest) ProtoMessage() {}

func (x *ChangePickedQuestStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePickedQuestStatusRequest.ProtoReflect.Descriptor instead.
func (*ChangePickedQuestStatusRequest) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{8}
}

func (x *ChangePickedQuestStatusRequest) GetQuestId() int64 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *ChangePickedQuestStatusRequest) GetStatus() UserQuestStatus {
	if x != nil {
		return x.Status
	}
	return UserQuestStatus_PICKED
}

type ListPickQuestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quest []*PickQuestResponse `protobuf:"bytes,1,rep,name=quest,proto3" json:"quest,omitempty"`
}

func (x *ListPickQuestResponse) Reset() {
	*x = ListPickQuestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPickQuestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPickQuestResponse) ProtoMessage() {}

func (x *ListPickQuestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPickQuestResponse.ProtoReflect.Descriptor instead.
func (*ListPickQuestResponse) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{9}
}

func (x *ListPickQuestResponse) GetQuest() []*PickQuestResponse {
	if x != nil {
		return x.Quest
	}
	return nil
}

type GetLoginQuestProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishedQuests int64 `protobuf:"varint,1,opt,name=finished_quests,json=finishedQuests,proto3" json:"finished_quests,omitempty"`
	TotalQuests    int64 `protobuf:"varint,2,opt,name=total_quests,json=totalQuests,proto3" json:"total_quests,omitempty"`
	IsTodayClaimed bool  `protobuf:"varint,3,opt,name=is_today_claimed,json=isTodayClaimed,proto3" json:"is_today_claimed,omitempty"`
}

func (x *GetLoginQuestProgressResponse) Reset() {
	*x = GetLoginQuestProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_quest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginQuestProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginQuestProgressResponse) ProtoMessage() {}

func (x *GetLoginQuestProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_quest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginQuestProgressResponse.ProtoReflect.Descriptor instead.
func (*GetLoginQuestProgressResponse) Descriptor() ([]byte, []int) {
	return file_user_quest_proto_rawDescGZIP(), []int{10}
}

func (x *GetLoginQuestProgressResponse) GetFinishedQuests() int64 {
	if x != nil {
		return x.FinishedQuests
	}
	return 0
}

func (x *GetLoginQuestProgressResponse) GetTotalQuests() int64 {
	if x != nil {
		return x.TotalQuests
	}
	return 0
}

func (x *GetLoginQuestProgressResponse) GetIsTodayClaimed() bool {
	if x != nil {
		return x.IsTodayClaimed
	}
	return false
}

var File_user_quest_proto protoreflect.FileDescriptor

var file_user_quest_proto_rawDesc = []byte{
	0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x10, 0x50, 0x69, 0x63, 0x6b, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x5a,
	0x0a, 0x13, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0b, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a,
	0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x48, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x55, 0x0a, 0x14, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x3f, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x91, 0x02, 0x0a, 0x13, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a,
	0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x27, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x64, 0x41, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x11, 0x50, 0x69, 0x63, 0x6b, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x77, 0x0a, 0x1e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x69, 0x63,
	0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x64, 0x2a, 0x49, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x49, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x03, 0x32, 0x9a,
	0x05, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x30, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x09, 0x50, 0x69, 0x63, 0x6b, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69,
	0x63, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x69, 0x63, 0x6b, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x32, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x69, 0x63, 0x6b,
	0x65, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x94, 0x01, 0x0a, 0x29,
	0x69, 0x6f, 0x2e, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x15, 0x55, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x6f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_quest_proto_rawDescOnce sync.Once
	file_user_quest_proto_rawDescData = file_user_quest_proto_rawDesc
)

func file_user_quest_proto_rawDescGZIP() []byte {
	file_user_quest_proto_rawDescOnce.Do(func() {
		file_user_quest_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_quest_proto_rawDescData)
	})
	return file_user_quest_proto_rawDescData
}

var file_user_quest_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_user_quest_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_user_quest_proto_goTypes = []interface{}{
	(UserQuestStatus)(0),                   // 0: useractivity.quest.UserQuestStatus
	(*PickQuestRequest)(nil),               // 1: useractivity.quest.PickQuestRequest
	(*ClaimRewardsRequest)(nil),            // 2: useractivity.quest.ClaimRewardsRequest
	(*GetLoginQuestProgressRequest)(nil),   // 3: useractivity.quest.GetLoginQuestProgressRequest
	(*ClaimRewardsResponse)(nil),           // 4: useractivity.quest.ClaimRewardsResponse
	(*GetClaimRewardsHistoryRequest)(nil),  // 5: useractivity.quest.GetClaimRewardsHistoryRequest
	(*GetClaimRewardsHistoryResponse)(nil), // 6: useractivity.quest.GetClaimRewardsHistoryResponse
	(*ClaimRewardsHistory)(nil),            // 7: useractivity.quest.ClaimRewardsHistory
	(*PickQuestResponse)(nil),              // 8: useractivity.quest.PickQuestResponse
	(*ChangePickedQuestStatusRequest)(nil), // 9: useractivity.quest.ChangePickedQuestStatusRequest
	(*ListPickQuestResponse)(nil),          // 10: useractivity.quest.ListPickQuestResponse
	(*GetLoginQuestProgressResponse)(nil),  // 11: useractivity.quest.GetLoginQuestProgressResponse
	(*domain.Rewards)(nil),                 // 12: Rewards
	(domain.QuestType)(0),                  // 13: QuestType
	(domain.QuestStatus)(0),                // 14: QuestStatus
	(*timestamppb.Timestamp)(nil),          // 15: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                  // 16: google.protobuf.Empty
}
var file_user_quest_proto_depIdxs = []int32{
	12, // 0: useractivity.quest.ClaimRewardsResponse.rewards:type_name -> Rewards
	13, // 1: useractivity.quest.GetClaimRewardsHistoryRequest.type:type_name -> QuestType
	7,  // 2: useractivity.quest.GetClaimRewardsHistoryResponse.history:type_name -> useractivity.quest.ClaimRewardsHistory
	13, // 3: useractivity.quest.ClaimRewardsHistory.questType:type_name -> QuestType
	14, // 4: useractivity.quest.ClaimRewardsHistory.questStatus:type_name -> QuestStatus
	12, // 5: useractivity.quest.ClaimRewardsHistory.rewards:type_name -> Rewards
	15, // 6: useractivity.quest.ClaimRewardsHistory.claimed_at:type_name -> google.protobuf.Timestamp
	13, // 7: useractivity.quest.PickQuestResponse.questType:type_name -> QuestType
	0,  // 8: useractivity.quest.PickQuestResponse.status:type_name -> useractivity.quest.UserQuestStatus
	0,  // 9: useractivity.quest.ChangePickedQuestStatusRequest.status:type_name -> useractivity.quest.UserQuestStatus
	8,  // 10: useractivity.quest.ListPickQuestResponse.quest:type_name -> useractivity.quest.PickQuestResponse
	2,  // 11: useractivity.quest.UserQuestService.ClaimRewards:input_type -> useractivity.quest.ClaimRewardsRequest
	5,  // 12: useractivity.quest.UserQuestService.GetClaimRewardsHistory:input_type -> useractivity.quest.GetClaimRewardsHistoryRequest
	3,  // 13: useractivity.quest.UserQuestService.GetLoginQuestProgress:input_type -> useractivity.quest.GetLoginQuestProgressRequest
	1,  // 14: useractivity.quest.UserQuestService.PickQuest:input_type -> useractivity.quest.PickQuestRequest
	16, // 15: useractivity.quest.UserQuestService.GetPickedQuests:input_type -> google.protobuf.Empty
	9,  // 16: useractivity.quest.UserQuestService.ChangePickedQuestStatus:input_type -> useractivity.quest.ChangePickedQuestStatusRequest
	4,  // 17: useractivity.quest.UserQuestService.ClaimRewards:output_type -> useractivity.quest.ClaimRewardsResponse
	6,  // 18: useractivity.quest.UserQuestService.GetClaimRewardsHistory:output_type -> useractivity.quest.GetClaimRewardsHistoryResponse
	11, // 19: useractivity.quest.UserQuestService.GetLoginQuestProgress:output_type -> useractivity.quest.GetLoginQuestProgressResponse
	8,  // 20: useractivity.quest.UserQuestService.PickQuest:output_type -> useractivity.quest.PickQuestResponse
	10, // 21: useractivity.quest.UserQuestService.GetPickedQuests:output_type -> useractivity.quest.ListPickQuestResponse
	8,  // 22: useractivity.quest.UserQuestService.ChangePickedQuestStatus:output_type -> useractivity.quest.PickQuestResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_user_quest_proto_init() }
func file_user_quest_proto_init() {
	if File_user_quest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_quest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickQuestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimRewardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginQuestProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimRewardsHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClaimRewardsHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimRewardsHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickQuestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePickedQuestStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPickQuestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_quest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginQuestProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_quest_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_quest_proto_goTypes,
		DependencyIndexes: file_user_quest_proto_depIdxs,
		EnumInfos:         file_user_quest_proto_enumTypes,
		MessageInfos:      file_user_quest_proto_msgTypes,
	}.Build()
	File_user_quest_proto = out.File
	file_user_quest_proto_rawDesc = nil
	file_user_quest_proto_goTypes = nil
	file_user_quest_proto_depIdxs = nil
}
