// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: domain/chat_channel.proto

package domain

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatMessageByChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pageable *Pageable `protobuf:"bytes,1,opt,name=pageable,proto3" json:"pageable,omitempty"`
	// Types that are assignable to Parameters:
	//	*ChatMessageByChannelRequest_OneToOne
	//	*ChatMessageByChannelRequest_Global
	//	*ChatMessageByChannelRequest_Island
	//	*ChatMessageByChannelRequest_Party
	Parameters isChatMessageByChannelRequest_Parameters `protobuf_oneof:"parameters"`
}

func (x *ChatMessageByChannelRequest) Reset() {
	*x = ChatMessageByChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_channel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageByChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageByChannelRequest) ProtoMessage() {}

func (x *ChatMessageByChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_channel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageByChannelRequest.ProtoReflect.Descriptor instead.
func (*ChatMessageByChannelRequest) Descriptor() ([]byte, []int) {
	return file_domain_chat_channel_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessageByChannelRequest) GetPageable() *Pageable {
	if x != nil {
		return x.Pageable
	}
	return nil
}

func (m *ChatMessageByChannelRequest) GetParameters() isChatMessageByChannelRequest_Parameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (x *ChatMessageByChannelRequest) GetOneToOne() *ChatMessageByChannelRequest_OneToOneChannelRequest {
	if x, ok := x.GetParameters().(*ChatMessageByChannelRequest_OneToOne); ok {
		return x.OneToOne
	}
	return nil
}

func (x *ChatMessageByChannelRequest) GetGlobal() *ChatMessageByChannelRequest_GlobalChannelRequest {
	if x, ok := x.GetParameters().(*ChatMessageByChannelRequest_Global); ok {
		return x.Global
	}
	return nil
}

func (x *ChatMessageByChannelRequest) GetIsland() *ChatMessageByChannelRequest_IslandChannelRequest {
	if x, ok := x.GetParameters().(*ChatMessageByChannelRequest_Island); ok {
		return x.Island
	}
	return nil
}

func (x *ChatMessageByChannelRequest) GetParty() *ChatMessageByChannelRequest_PartyChannelRequest {
	if x, ok := x.GetParameters().(*ChatMessageByChannelRequest_Party); ok {
		return x.Party
	}
	return nil
}

type isChatMessageByChannelRequest_Parameters interface {
	isChatMessageByChannelRequest_Parameters()
}

type ChatMessageByChannelRequest_OneToOne struct {
	OneToOne *ChatMessageByChannelRequest_OneToOneChannelRequest `protobuf:"bytes,2,opt,name=one_to_one,json=oneToOne,proto3,oneof"`
}

type ChatMessageByChannelRequest_Global struct {
	Global *ChatMessageByChannelRequest_GlobalChannelRequest `protobuf:"bytes,3,opt,name=global,proto3,oneof"`
}

type ChatMessageByChannelRequest_Island struct {
	Island *ChatMessageByChannelRequest_IslandChannelRequest `protobuf:"bytes,4,opt,name=island,proto3,oneof"`
}

type ChatMessageByChannelRequest_Party struct {
	Party *ChatMessageByChannelRequest_PartyChannelRequest `protobuf:"bytes,5,opt,name=party,proto3,oneof"`
}

func (*ChatMessageByChannelRequest_OneToOne) isChatMessageByChannelRequest_Parameters() {}

func (*ChatMessageByChannelRequest_Global) isChatMessageByChannelRequest_Parameters() {}

func (*ChatMessageByChannelRequest_Island) isChatMessageByChannelRequest_Parameters() {}

func (*ChatMessageByChannelRequest_Party) isChatMessageByChannelRequest_Parameters() {}

type Pageable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The client uses this field to request a specific page of the list results.
	PageNumber int32 `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	// Clients use this field to specify the maximum number of results to be returned by the server.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *Pageable) Reset() {
	*x = Pageable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_channel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pageable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pageable) ProtoMessage() {}

func (x *Pageable) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_channel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pageable.ProtoReflect.Descriptor instead.
func (*Pageable) Descriptor() ([]byte, []int) {
	return file_domain_chat_channel_proto_rawDescGZIP(), []int{1}
}

func (x *Pageable) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *Pageable) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ChatMessageByChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pageable  *Pageable              `protobuf:"bytes,1,opt,name=pageable,proto3" json:"pageable,omitempty"`
	ChannelId string                 `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Messages  []*ChatMessageResponse `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *ChatMessageByChannelResponse) Reset() {
	*x = ChatMessageByChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_channel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageByChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageByChannelResponse) ProtoMessage() {}

func (x *ChatMessageByChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_channel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageByChannelResponse.ProtoReflect.Descriptor instead.
func (*ChatMessageByChannelResponse) Descriptor() ([]byte, []int) {
	return file_domain_chat_channel_proto_rawDescGZIP(), []int{2}
}

func (x *ChatMessageByChannelResponse) GetPageable() *Pageable {
	if x != nil {
		return x.Pageable
	}
	return nil
}

func (x *ChatMessageByChannelResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChatMessageByChannelResponse) GetMessages() []*ChatMessageResponse {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ChatMessageByChannelRequest_OneToOneChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *ChatMessageByChannelRequest_OneToOneChannelRequest) Reset() {
	*x = ChatMessageByChannelRequest_OneToOneChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_channel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageByChannelRequest_OneToOneChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageByChannelRequest_OneToOneChannelRequest) ProtoMessage() {}

func (x *ChatMessageByChannelRequest_OneToOneChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_channel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageByChannelRequest_OneToOneChannelRequest.ProtoReflect.Descriptor instead.
func (*ChatMessageByChannelRequest_OneToOneChannelRequest) Descriptor() ([]byte, []int) {
	return file_domain_chat_channel_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ChatMessageByChannelRequest_OneToOneChannelRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ChatMessageByChannelRequest_OneToOneChannelRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type ChatMessageByChannelRequest_GlobalChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChatMessageByChannelRequest_GlobalChannelRequest) Reset() {
	*x = ChatMessageByChannelRequest_GlobalChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_channel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageByChannelRequest_GlobalChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageByChannelRequest_GlobalChannelRequest) ProtoMessage() {}

func (x *ChatMessageByChannelRequest_GlobalChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_channel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageByChannelRequest_GlobalChannelRequest.ProtoReflect.Descriptor instead.
func (*ChatMessageByChannelRequest_GlobalChannelRequest) Descriptor() ([]byte, []int) {
	return file_domain_chat_channel_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ChatMessageByChannelRequest_GlobalChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ChatMessageByChannelRequest_IslandChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChatMessageByChannelRequest_IslandChannelRequest) Reset() {
	*x = ChatMessageByChannelRequest_IslandChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_channel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageByChannelRequest_IslandChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageByChannelRequest_IslandChannelRequest) ProtoMessage() {}

func (x *ChatMessageByChannelRequest_IslandChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_channel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageByChannelRequest_IslandChannelRequest.ProtoReflect.Descriptor instead.
func (*ChatMessageByChannelRequest_IslandChannelRequest) Descriptor() ([]byte, []int) {
	return file_domain_chat_channel_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ChatMessageByChannelRequest_IslandChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ChatMessageByChannelRequest_PartyChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChatMessageByChannelRequest_PartyChannelRequest) Reset() {
	*x = ChatMessageByChannelRequest_PartyChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_channel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageByChannelRequest_PartyChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageByChannelRequest_PartyChannelRequest) ProtoMessage() {}

func (x *ChatMessageByChannelRequest_PartyChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_channel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageByChannelRequest_PartyChannelRequest.ProtoReflect.Descriptor instead.
func (*ChatMessageByChannelRequest_PartyChannelRequest) Descriptor() ([]byte, []int) {
	return file_domain_chat_channel_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ChatMessageByChannelRequest_PartyChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

var File_domain_chat_channel_proto protoreflect.FileDescriptor

var file_domain_chat_channel_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb8, 0x05, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x08, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x4b, 0x0a, 0x06, 0x69, 0x73, 0x6c, 0x61,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x69,
	0x73, 0x6c, 0x61, 0x6e, 0x64, 0x12, 0x48, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x1a,
	0x63, 0x0a, 0x16, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa,
	0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x1a, 0x3e, 0x0a, 0x14, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x1a, 0x40, 0x0a, 0x14, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x3f, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x48, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x9a, 0x01,
	0x0a, 0x1e, 0x69, 0x6f, 0x2e, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x42, 0x10, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x6f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0xaa, 0x02, 0x1b, 0x4d,
	0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_domain_chat_channel_proto_rawDescOnce sync.Once
	file_domain_chat_channel_proto_rawDescData = file_domain_chat_channel_proto_rawDesc
)

func file_domain_chat_channel_proto_rawDescGZIP() []byte {
	file_domain_chat_channel_proto_rawDescOnce.Do(func() {
		file_domain_chat_channel_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_chat_channel_proto_rawDescData)
	})
	return file_domain_chat_channel_proto_rawDescData
}

var file_domain_chat_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_domain_chat_channel_proto_goTypes = []interface{}{
	(*ChatMessageByChannelRequest)(nil),                        // 0: ChatMessageByChannelRequest
	(*Pageable)(nil),                                           // 1: Pageable
	(*ChatMessageByChannelResponse)(nil),                       // 2: ChatMessageByChannelResponse
	(*ChatMessageByChannelRequest_OneToOneChannelRequest)(nil), // 3: ChatMessageByChannelRequest.OneToOneChannelRequest
	(*ChatMessageByChannelRequest_GlobalChannelRequest)(nil),   // 4: ChatMessageByChannelRequest.GlobalChannelRequest
	(*ChatMessageByChannelRequest_IslandChannelRequest)(nil),   // 5: ChatMessageByChannelRequest.IslandChannelRequest
	(*ChatMessageByChannelRequest_PartyChannelRequest)(nil),    // 6: ChatMessageByChannelRequest.PartyChannelRequest
	(*ChatMessageResponse)(nil),                                // 7: ChatMessageResponse
}
var file_domain_chat_channel_proto_depIdxs = []int32{
	1, // 0: ChatMessageByChannelRequest.pageable:type_name -> Pageable
	3, // 1: ChatMessageByChannelRequest.one_to_one:type_name -> ChatMessageByChannelRequest.OneToOneChannelRequest
	4, // 2: ChatMessageByChannelRequest.global:type_name -> ChatMessageByChannelRequest.GlobalChannelRequest
	5, // 3: ChatMessageByChannelRequest.island:type_name -> ChatMessageByChannelRequest.IslandChannelRequest
	6, // 4: ChatMessageByChannelRequest.party:type_name -> ChatMessageByChannelRequest.PartyChannelRequest
	1, // 5: ChatMessageByChannelResponse.pageable:type_name -> Pageable
	7, // 6: ChatMessageByChannelResponse.messages:type_name -> ChatMessageResponse
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_domain_chat_channel_proto_init() }
func file_domain_chat_channel_proto_init() {
	if File_domain_chat_channel_proto != nil {
		return
	}
	file_domain_chat_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_domain_chat_channel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageByChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_channel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pageable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_channel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageByChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_channel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageByChannelRequest_OneToOneChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_channel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageByChannelRequest_GlobalChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_channel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageByChannelRequest_IslandChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_channel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageByChannelRequest_PartyChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_domain_chat_channel_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ChatMessageByChannelRequest_OneToOne)(nil),
		(*ChatMessageByChannelRequest_Global)(nil),
		(*ChatMessageByChannelRequest_Island)(nil),
		(*ChatMessageByChannelRequest_Party)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_chat_channel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_domain_chat_channel_proto_goTypes,
		DependencyIndexes: file_domain_chat_channel_proto_depIdxs,
		MessageInfos:      file_domain_chat_channel_proto_msgTypes,
	}.Build()
	File_domain_chat_channel_proto = out.File
	file_domain_chat_channel_proto_rawDesc = nil
	file_domain_chat_channel_proto_goTypes = nil
	file_domain_chat_channel_proto_depIdxs = nil
}
