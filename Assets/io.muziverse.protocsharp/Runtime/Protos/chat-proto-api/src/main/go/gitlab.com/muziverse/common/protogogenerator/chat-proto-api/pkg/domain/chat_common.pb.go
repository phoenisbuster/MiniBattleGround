// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: domain/chat_common.proto

package domain

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatChannel_ChannelType int32

const (
	ChatChannel_ONE_TO_ONE ChatChannel_ChannelType = 0
	ChatChannel_GLOBAL     ChatChannel_ChannelType = 1
	ChatChannel_ISLAND     ChatChannel_ChannelType = 2
	ChatChannel_PARTY      ChatChannel_ChannelType = 3
)

// Enum value maps for ChatChannel_ChannelType.
var (
	ChatChannel_ChannelType_name = map[int32]string{
		0: "ONE_TO_ONE",
		1: "GLOBAL",
		2: "ISLAND",
		3: "PARTY",
	}
	ChatChannel_ChannelType_value = map[string]int32{
		"ONE_TO_ONE": 0,
		"GLOBAL":     1,
		"ISLAND":     2,
		"PARTY":      3,
	}
)

func (x ChatChannel_ChannelType) Enum() *ChatChannel_ChannelType {
	p := new(ChatChannel_ChannelType)
	*p = x
	return p
}

func (x ChatChannel_ChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatChannel_ChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_chat_common_proto_enumTypes[0].Descriptor()
}

func (ChatChannel_ChannelType) Type() protoreflect.EnumType {
	return &file_domain_chat_common_proto_enumTypes[0]
}

func (x ChatChannel_ChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatChannel_ChannelType.Descriptor instead.
func (ChatChannel_ChannelType) EnumDescriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{0, 0}
}

type ChatMessage_MessageType int32

const (
	ChatMessage_TEXT  ChatMessage_MessageType = 0
	ChatMessage_IMAGE ChatMessage_MessageType = 1
	ChatMessage_AUDIO ChatMessage_MessageType = 2
)

// Enum value maps for ChatMessage_MessageType.
var (
	ChatMessage_MessageType_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE",
		2: "AUDIO",
	}
	ChatMessage_MessageType_value = map[string]int32{
		"TEXT":  0,
		"IMAGE": 1,
		"AUDIO": 2,
	}
)

func (x ChatMessage_MessageType) Enum() *ChatMessage_MessageType {
	p := new(ChatMessage_MessageType)
	*p = x
	return p
}

func (x ChatMessage_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMessage_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_chat_common_proto_enumTypes[1].Descriptor()
}

func (ChatMessage_MessageType) Type() protoreflect.EnumType {
	return &file_domain_chat_common_proto_enumTypes[1]
}

func (x ChatMessage_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMessage_MessageType.Descriptor instead.
func (ChatMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{1, 0}
}

type ChatChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelType ChatChannel_ChannelType `protobuf:"varint,1,opt,name=channel_type,json=channelType,proto3,enum=ChatChannel_ChannelType" json:"channel_type,omitempty"`
	// Types that are assignable to Channel:
	//	*ChatChannel_OneToOne
	//	*ChatChannel_Global
	//	*ChatChannel_Island
	//	*ChatChannel_Party
	Channel isChatChannel_Channel `protobuf_oneof:"channel"`
}

func (x *ChatChannel) Reset() {
	*x = ChatChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatChannel) ProtoMessage() {}

func (x *ChatChannel) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatChannel.ProtoReflect.Descriptor instead.
func (*ChatChannel) Descriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{0}
}

func (x *ChatChannel) GetChannelType() ChatChannel_ChannelType {
	if x != nil {
		return x.ChannelType
	}
	return ChatChannel_ONE_TO_ONE
}

func (m *ChatChannel) GetChannel() isChatChannel_Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (x *ChatChannel) GetOneToOne() *ChatChannel_OneToOneChannel {
	if x, ok := x.GetChannel().(*ChatChannel_OneToOne); ok {
		return x.OneToOne
	}
	return nil
}

func (x *ChatChannel) GetGlobal() *ChatChannel_GlobalChannel {
	if x, ok := x.GetChannel().(*ChatChannel_Global); ok {
		return x.Global
	}
	return nil
}

func (x *ChatChannel) GetIsland() *ChatChannel_IslandChannel {
	if x, ok := x.GetChannel().(*ChatChannel_Island); ok {
		return x.Island
	}
	return nil
}

func (x *ChatChannel) GetParty() *ChatChannel_PartyChannel {
	if x, ok := x.GetChannel().(*ChatChannel_Party); ok {
		return x.Party
	}
	return nil
}

type isChatChannel_Channel interface {
	isChatChannel_Channel()
}

type ChatChannel_OneToOne struct {
	OneToOne *ChatChannel_OneToOneChannel `protobuf:"bytes,2,opt,name=one_to_one,json=oneToOne,proto3,oneof"`
}

type ChatChannel_Global struct {
	Global *ChatChannel_GlobalChannel `protobuf:"bytes,3,opt,name=global,proto3,oneof"`
}

type ChatChannel_Island struct {
	Island *ChatChannel_IslandChannel `protobuf:"bytes,4,opt,name=island,proto3,oneof"`
}

type ChatChannel_Party struct {
	Party *ChatChannel_PartyChannel `protobuf:"bytes,5,opt,name=party,proto3,oneof"`
}

func (*ChatChannel_OneToOne) isChatChannel_Channel() {}

func (*ChatChannel_Global) isChatChannel_Channel() {}

func (*ChatChannel_Island) isChatChannel_Channel() {}

func (*ChatChannel_Party) isChatChannel_Channel() {}

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType ChatMessage_MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=ChatMessage_MessageType" json:"message_type,omitempty"`
	// Types that are assignable to Message:
	//	*ChatMessage_Text
	//	*ChatMessage_Image
	//	*ChatMessage_Audio
	Message isChatMessage_Message `protobuf_oneof:"message"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessage) GetMessageType() ChatMessage_MessageType {
	if x != nil {
		return x.MessageType
	}
	return ChatMessage_TEXT
}

func (m *ChatMessage) GetMessage() isChatMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ChatMessage) GetText() *ChatMessage_TextMessage {
	if x, ok := x.GetMessage().(*ChatMessage_Text); ok {
		return x.Text
	}
	return nil
}

func (x *ChatMessage) GetImage() *ChatMessage_ImageMessage {
	if x, ok := x.GetMessage().(*ChatMessage_Image); ok {
		return x.Image
	}
	return nil
}

func (x *ChatMessage) GetAudio() *ChatMessage_AudioMessage {
	if x, ok := x.GetMessage().(*ChatMessage_Audio); ok {
		return x.Audio
	}
	return nil
}

type isChatMessage_Message interface {
	isChatMessage_Message()
}

type ChatMessage_Text struct {
	Text *ChatMessage_TextMessage `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

type ChatMessage_Image struct {
	Image *ChatMessage_ImageMessage `protobuf:"bytes,3,opt,name=image,proto3,oneof"`
}

type ChatMessage_Audio struct {
	Audio *ChatMessage_AudioMessage `protobuf:"bytes,4,opt,name=audio,proto3,oneof"`
}

func (*ChatMessage_Text) isChatMessage_Message() {}

func (*ChatMessage_Image) isChatMessage_Message() {}

func (*ChatMessage_Audio) isChatMessage_Message() {}

type ChatChannel_OneToOneChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *ChatChannel_OneToOneChannel) Reset() {
	*x = ChatChannel_OneToOneChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatChannel_OneToOneChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatChannel_OneToOneChannel) ProtoMessage() {}

func (x *ChatChannel_OneToOneChannel) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatChannel_OneToOneChannel.ProtoReflect.Descriptor instead.
func (*ChatChannel_OneToOneChannel) Descriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ChatChannel_OneToOneChannel) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type ChatChannel_GlobalChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChatChannel_GlobalChannel) Reset() {
	*x = ChatChannel_GlobalChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatChannel_GlobalChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatChannel_GlobalChannel) ProtoMessage() {}

func (x *ChatChannel_GlobalChannel) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatChannel_GlobalChannel.ProtoReflect.Descriptor instead.
func (*ChatChannel_GlobalChannel) Descriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ChatChannel_GlobalChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ChatChannel_IslandChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChatChannel_IslandChannel) Reset() {
	*x = ChatChannel_IslandChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatChannel_IslandChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatChannel_IslandChannel) ProtoMessage() {}

func (x *ChatChannel_IslandChannel) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatChannel_IslandChannel.ProtoReflect.Descriptor instead.
func (*ChatChannel_IslandChannel) Descriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ChatChannel_IslandChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ChatChannel_PartyChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChatChannel_PartyChannel) Reset() {
	*x = ChatChannel_PartyChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatChannel_PartyChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatChannel_PartyChannel) ProtoMessage() {}

func (x *ChatChannel_PartyChannel) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatChannel_PartyChannel.ProtoReflect.Descriptor instead.
func (*ChatChannel_PartyChannel) Descriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ChatChannel_PartyChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ChatMessage_TextMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ChatMessage_TextMessage) Reset() {
	*x = ChatMessage_TextMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_TextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_TextMessage) ProtoMessage() {}

func (x *ChatMessage_TextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_TextMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage_TextMessage) Descriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ChatMessage_TextMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChatMessage_ImageMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ChatMessage_ImageMessage) Reset() {
	*x = ChatMessage_ImageMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_ImageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_ImageMessage) ProtoMessage() {}

func (x *ChatMessage_ImageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_ImageMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage_ImageMessage) Descriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ChatMessage_ImageMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ChatMessage_AudioMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ChatMessage_AudioMessage) Reset() {
	*x = ChatMessage_AudioMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_chat_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_AudioMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_AudioMessage) ProtoMessage() {}

func (x *ChatMessage_AudioMessage) ProtoReflect() protoreflect.Message {
	mi := &file_domain_chat_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_AudioMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage_AudioMessage) Descriptor() ([]byte, []int) {
	return file_domain_chat_common_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ChatMessage_AudioMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_domain_chat_common_proto protoreflect.FileDescriptor

var file_domain_chat_common_proto_rawDesc = []byte{
	0x0a, 0x18, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x04, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3c, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x12, 0x34,
	0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x06, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x06, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x48, 0x00, 0x52, 0x06, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x1a, 0x3a, 0x0a,
	0x0f, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x27, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xb0, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x1a, 0x37, 0x0a, 0x0d, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x1a, 0x39, 0x0a, 0x0d, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01,
	0x18, 0x64, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x38, 0x0a,
	0x0c, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x28, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x4f,
	0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x53, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x03, 0x42, 0x0e, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xb0, 0x03, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x1a, 0x33, 0x0a, 0x0b,
	0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x1a, 0x2c, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a,
	0x2c, 0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x2d, 0x0a,
	0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x02, 0x42, 0x0e, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x42, 0x95, 0x01, 0x0a,
	0x1e, 0x69, 0x6f, 0x2e, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x7a, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x6f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x68, 0x61,
	0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0xaa, 0x02, 0x1b, 0x4d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_chat_common_proto_rawDescOnce sync.Once
	file_domain_chat_common_proto_rawDescData = file_domain_chat_common_proto_rawDesc
)

func file_domain_chat_common_proto_rawDescGZIP() []byte {
	file_domain_chat_common_proto_rawDescOnce.Do(func() {
		file_domain_chat_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_chat_common_proto_rawDescData)
	})
	return file_domain_chat_common_proto_rawDescData
}

var file_domain_chat_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_domain_chat_common_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_domain_chat_common_proto_goTypes = []interface{}{
	(ChatChannel_ChannelType)(0),        // 0: ChatChannel.ChannelType
	(ChatMessage_MessageType)(0),        // 1: ChatMessage.MessageType
	(*ChatChannel)(nil),                 // 2: ChatChannel
	(*ChatMessage)(nil),                 // 3: ChatMessage
	(*ChatChannel_OneToOneChannel)(nil), // 4: ChatChannel.OneToOneChannel
	(*ChatChannel_GlobalChannel)(nil),   // 5: ChatChannel.GlobalChannel
	(*ChatChannel_IslandChannel)(nil),   // 6: ChatChannel.IslandChannel
	(*ChatChannel_PartyChannel)(nil),    // 7: ChatChannel.PartyChannel
	(*ChatMessage_TextMessage)(nil),     // 8: ChatMessage.TextMessage
	(*ChatMessage_ImageMessage)(nil),    // 9: ChatMessage.ImageMessage
	(*ChatMessage_AudioMessage)(nil),    // 10: ChatMessage.AudioMessage
}
var file_domain_chat_common_proto_depIdxs = []int32{
	0,  // 0: ChatChannel.channel_type:type_name -> ChatChannel.ChannelType
	4,  // 1: ChatChannel.one_to_one:type_name -> ChatChannel.OneToOneChannel
	5,  // 2: ChatChannel.global:type_name -> ChatChannel.GlobalChannel
	6,  // 3: ChatChannel.island:type_name -> ChatChannel.IslandChannel
	7,  // 4: ChatChannel.party:type_name -> ChatChannel.PartyChannel
	1,  // 5: ChatMessage.message_type:type_name -> ChatMessage.MessageType
	8,  // 6: ChatMessage.text:type_name -> ChatMessage.TextMessage
	9,  // 7: ChatMessage.image:type_name -> ChatMessage.ImageMessage
	10, // 8: ChatMessage.audio:type_name -> ChatMessage.AudioMessage
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_domain_chat_common_proto_init() }
func file_domain_chat_common_proto_init() {
	if File_domain_chat_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_chat_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatChannel_OneToOneChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatChannel_GlobalChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatChannel_IslandChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatChannel_PartyChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_TextMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_ImageMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_chat_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_AudioMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_domain_chat_common_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ChatChannel_OneToOne)(nil),
		(*ChatChannel_Global)(nil),
		(*ChatChannel_Island)(nil),
		(*ChatChannel_Party)(nil),
	}
	file_domain_chat_common_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ChatMessage_Text)(nil),
		(*ChatMessage_Image)(nil),
		(*ChatMessage_Audio)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_chat_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_domain_chat_common_proto_goTypes,
		DependencyIndexes: file_domain_chat_common_proto_depIdxs,
		EnumInfos:         file_domain_chat_common_proto_enumTypes,
		MessageInfos:      file_domain_chat_common_proto_msgTypes,
	}.Build()
	File_domain_chat_common_proto = out.File
	file_domain_chat_common_proto_rawDesc = nil
	file_domain_chat_common_proto_goTypes = nil
	file_domain_chat_common_proto_depIdxs = nil
}
