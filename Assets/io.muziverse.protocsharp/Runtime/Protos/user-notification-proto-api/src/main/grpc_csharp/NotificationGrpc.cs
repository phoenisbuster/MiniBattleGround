// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: notification.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Muziverse.Proto.UserNotification.Api.Notification {
  public static partial class NotificationService
  {
    static readonly string __ServiceName = "usernotification.notification.NotificationService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Muziverse.Proto.UserNotification.Api.Notification.SubscribeNotificationRequest> __Marshaller_usernotification_notification_SubscribeNotificationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Muziverse.Proto.UserNotification.Api.Notification.SubscribeNotificationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Muziverse.Proto.UserNotification.Domain.StreamNotificationMessageResponse> __Marshaller_StreamNotificationMessageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Muziverse.Proto.UserNotification.Domain.StreamNotificationMessageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest> __Marshaller_usernotification_notification_GetNotificationListRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse> __Marshaller_usernotification_notification_GameNotificationMessageLiteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest> __Marshaller_usernotification_notification_GetNotificationDetailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage> __Marshaller_GameNotificationMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest> __Marshaller_usernotification_notification_MarkReadNotificationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Int64Value.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Muziverse.Proto.UserNotification.Api.Notification.SubscribeNotificationRequest, global::Muziverse.Proto.UserNotification.Domain.StreamNotificationMessageResponse> __Method_SubscribeNotification = new grpc::Method<global::Muziverse.Proto.UserNotification.Api.Notification.SubscribeNotificationRequest, global::Muziverse.Proto.UserNotification.Domain.StreamNotificationMessageResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeNotification",
        __Marshaller_usernotification_notification_SubscribeNotificationRequest,
        __Marshaller_StreamNotificationMessageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest, global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse> __Method_GetNotificationList = new grpc::Method<global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest, global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotificationList",
        __Marshaller_usernotification_notification_GetNotificationListRequest,
        __Marshaller_usernotification_notification_GameNotificationMessageLiteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest, global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage> __Method_GetNotificationDetail = new grpc::Method<global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest, global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotificationDetail",
        __Marshaller_usernotification_notification_GetNotificationDetailRequest,
        __Marshaller_GameNotificationMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_MarkReadNotification = new grpc::Method<global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MarkReadNotification",
        __Marshaller_usernotification_notification_MarkReadNotificationRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetAllUnreadNotification = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllUnreadNotification",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Int64Value);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Muziverse.Proto.UserNotification.Api.Notification.NotificationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of NotificationService</summary>
    [grpc::BindServiceMethod(typeof(NotificationService), "BindService")]
    public abstract partial class NotificationServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeNotification(global::Muziverse.Proto.UserNotification.Api.Notification.SubscribeNotificationRequest request, grpc::IServerStreamWriter<global::Muziverse.Proto.UserNotification.Domain.StreamNotificationMessageResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse> GetNotificationList(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage> GetNotificationDetail(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> MarkReadNotification(global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Int64Value> GetAllUnreadNotification(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for NotificationService</summary>
    public partial class NotificationServiceClient : grpc::ClientBase<NotificationServiceClient>
    {
      /// <summary>Creates a new client for NotificationService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NotificationServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NotificationService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NotificationServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NotificationServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NotificationServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Muziverse.Proto.UserNotification.Domain.StreamNotificationMessageResponse> SubscribeNotification(global::Muziverse.Proto.UserNotification.Api.Notification.SubscribeNotificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeNotification(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Muziverse.Proto.UserNotification.Domain.StreamNotificationMessageResponse> SubscribeNotification(global::Muziverse.Proto.UserNotification.Api.Notification.SubscribeNotificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeNotification, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse GetNotificationList(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse GetNotificationList(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotificationList, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse> GetNotificationListAsync(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse> GetNotificationListAsync(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotificationList, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage GetNotificationDetail(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationDetail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage GetNotificationDetail(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotificationDetail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage> GetNotificationDetailAsync(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationDetailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage> GetNotificationDetailAsync(global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotificationDetail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty MarkReadNotification(global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkReadNotification(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty MarkReadNotification(global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MarkReadNotification, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> MarkReadNotificationAsync(global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkReadNotificationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> MarkReadNotificationAsync(global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MarkReadNotification, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetAllUnreadNotification(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUnreadNotification(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetAllUnreadNotification(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllUnreadNotification, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Int64Value> GetAllUnreadNotificationAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUnreadNotificationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Int64Value> GetAllUnreadNotificationAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllUnreadNotification, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override NotificationServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NotificationServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(NotificationServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SubscribeNotification, serviceImpl.SubscribeNotification)
          .AddMethod(__Method_GetNotificationList, serviceImpl.GetNotificationList)
          .AddMethod(__Method_GetNotificationDetail, serviceImpl.GetNotificationDetail)
          .AddMethod(__Method_MarkReadNotification, serviceImpl.MarkReadNotification)
          .AddMethod(__Method_GetAllUnreadNotification, serviceImpl.GetAllUnreadNotification).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NotificationServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SubscribeNotification, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Muziverse.Proto.UserNotification.Api.Notification.SubscribeNotificationRequest, global::Muziverse.Proto.UserNotification.Domain.StreamNotificationMessageResponse>(serviceImpl.SubscribeNotification));
      serviceBinder.AddMethod(__Method_GetNotificationList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationListRequest, global::Muziverse.Proto.UserNotification.Api.Notification.GameNotificationMessageLiteResponse>(serviceImpl.GetNotificationList));
      serviceBinder.AddMethod(__Method_GetNotificationDetail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Muziverse.Proto.UserNotification.Api.Notification.GetNotificationDetailRequest, global::Muziverse.Proto.UserNotification.Domain.GameNotificationMessage>(serviceImpl.GetNotificationDetail));
      serviceBinder.AddMethod(__Method_MarkReadNotification, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Muziverse.Proto.UserNotification.Api.Notification.MarkReadNotificationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.MarkReadNotification));
      serviceBinder.AddMethod(__Method_GetAllUnreadNotification, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Int64Value>(serviceImpl.GetAllUnreadNotification));
    }

  }
}
#endregion
