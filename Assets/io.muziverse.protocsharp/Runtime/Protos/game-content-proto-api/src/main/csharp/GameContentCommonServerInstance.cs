// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: domain/game_content_common_server_instance.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Muziverse.Proto.GameContent.Domain {

  /// <summary>Holder for reflection information generated from domain/game_content_common_server_instance.proto</summary>
  public static partial class GameContentCommonServerInstanceReflection {

    #region Descriptor
    /// <summary>File descriptor for domain/game_content_common_server_instance.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameContentCommonServerInstanceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBkb21haW4vZ2FtZV9jb250ZW50X2NvbW1vbl9zZXJ2ZXJfaW5zdGFuY2Uu",
            "cHJvdG8aF2RvbWFpbi9rOHNfY29tbW9uLnByb3RvGhd2YWxpZGF0ZS92YWxp",
            "ZGF0ZS5wcm90byLHAQoZR2FtZUNvbnRlbnRTZXJ2ZXJJbnN0YW5jZRIVCgRj",
            "b2RlGAEgASgJQgf6QgRyAhABEhwKFHNlcnZlcl9pbnN0YW5jZV9uYW1lGAIg",
            "ASgJEhoKCW5hbWVzcGFjZRgDIAEoCUIH+kIEcgIQARIdChVudW1iZXJfb2Zf",
            "Z2FtZV9zZXJ2ZXIYBCABKAUSJQoNaW5zdGFuY2VfdHlwZRgFIAEoDjIOLkdh",
            "bWVGbGVldFR5cGUSEwoLZ2FtZV9zeW1ib2wYBiABKAlCswEKJWlvLm11eml2",
            "ZXJzZS5wcm90by5nYW1lY29udGVudC5kb21haW5CE1NlcnZlckluc3RhbmNl",
            "UHJvdG9QAVpOZ2l0bGFiLmNvbS9tdXppdmVyc2UvY29tbW9uL3Byb3RvZ29n",
            "ZW5lcmF0b3IvZ2FtZS1jb250ZW50LXByb3RvLWFwaS9wa2cvZG9tYWluqgIi",
            "TXV6aXZlcnNlLlByb3RvLkdhbWVDb250ZW50LkRvbWFpbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::K8SCommonReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Muziverse.Proto.GameContent.Domain.GameContentServerInstance), global::Muziverse.Proto.GameContent.Domain.GameContentServerInstance.Parser, new[]{ "Code", "ServerInstanceName", "Namespace", "NumberOfGameServer", "InstanceType", "GameSymbol" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GameContentServerInstance : pb::IMessage<GameContentServerInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameContentServerInstance> _parser = new pb::MessageParser<GameContentServerInstance>(() => new GameContentServerInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameContentServerInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Muziverse.Proto.GameContent.Domain.GameContentCommonServerInstanceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameContentServerInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameContentServerInstance(GameContentServerInstance other) : this() {
      code_ = other.code_;
      serverInstanceName_ = other.serverInstanceName_;
      namespace_ = other.namespace_;
      numberOfGameServer_ = other.numberOfGameServer_;
      instanceType_ = other.instanceType_;
      gameSymbol_ = other.gameSymbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameContentServerInstance Clone() {
      return new GameContentServerInstance(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "server_instance_name" field.</summary>
    public const int ServerInstanceNameFieldNumber = 2;
    private string serverInstanceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServerInstanceName {
      get { return serverInstanceName_; }
      set {
        serverInstanceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 3;
    private string namespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "number_of_game_server" field.</summary>
    public const int NumberOfGameServerFieldNumber = 4;
    private int numberOfGameServer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumberOfGameServer {
      get { return numberOfGameServer_; }
      set {
        numberOfGameServer_ = value;
      }
    }

    /// <summary>Field number for the "instance_type" field.</summary>
    public const int InstanceTypeFieldNumber = 5;
    private global::GameFleetType instanceType_ = global::GameFleetType.FleetTypeUnspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameFleetType InstanceType {
      get { return instanceType_; }
      set {
        instanceType_ = value;
      }
    }

    /// <summary>Field number for the "game_symbol" field.</summary>
    public const int GameSymbolFieldNumber = 6;
    private string gameSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameSymbol {
      get { return gameSymbol_; }
      set {
        gameSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameContentServerInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameContentServerInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (ServerInstanceName != other.ServerInstanceName) return false;
      if (Namespace != other.Namespace) return false;
      if (NumberOfGameServer != other.NumberOfGameServer) return false;
      if (InstanceType != other.InstanceType) return false;
      if (GameSymbol != other.GameSymbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (ServerInstanceName.Length != 0) hash ^= ServerInstanceName.GetHashCode();
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (NumberOfGameServer != 0) hash ^= NumberOfGameServer.GetHashCode();
      if (InstanceType != global::GameFleetType.FleetTypeUnspecified) hash ^= InstanceType.GetHashCode();
      if (GameSymbol.Length != 0) hash ^= GameSymbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (ServerInstanceName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerInstanceName);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Namespace);
      }
      if (NumberOfGameServer != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumberOfGameServer);
      }
      if (InstanceType != global::GameFleetType.FleetTypeUnspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) InstanceType);
      }
      if (GameSymbol.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(GameSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (ServerInstanceName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerInstanceName);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Namespace);
      }
      if (NumberOfGameServer != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumberOfGameServer);
      }
      if (InstanceType != global::GameFleetType.FleetTypeUnspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) InstanceType);
      }
      if (GameSymbol.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(GameSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (ServerInstanceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerInstanceName);
      }
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (NumberOfGameServer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfGameServer);
      }
      if (InstanceType != global::GameFleetType.FleetTypeUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InstanceType);
      }
      if (GameSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameSymbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameContentServerInstance other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.ServerInstanceName.Length != 0) {
        ServerInstanceName = other.ServerInstanceName;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      if (other.NumberOfGameServer != 0) {
        NumberOfGameServer = other.NumberOfGameServer;
      }
      if (other.InstanceType != global::GameFleetType.FleetTypeUnspecified) {
        InstanceType = other.InstanceType;
      }
      if (other.GameSymbol.Length != 0) {
        GameSymbol = other.GameSymbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            ServerInstanceName = input.ReadString();
            break;
          }
          case 26: {
            Namespace = input.ReadString();
            break;
          }
          case 32: {
            NumberOfGameServer = input.ReadInt32();
            break;
          }
          case 40: {
            InstanceType = (global::GameFleetType) input.ReadEnum();
            break;
          }
          case 50: {
            GameSymbol = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            ServerInstanceName = input.ReadString();
            break;
          }
          case 26: {
            Namespace = input.ReadString();
            break;
          }
          case 32: {
            NumberOfGameServer = input.ReadInt32();
            break;
          }
          case 40: {
            InstanceType = (global::GameFleetType) input.ReadEnum();
            break;
          }
          case 50: {
            GameSymbol = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
