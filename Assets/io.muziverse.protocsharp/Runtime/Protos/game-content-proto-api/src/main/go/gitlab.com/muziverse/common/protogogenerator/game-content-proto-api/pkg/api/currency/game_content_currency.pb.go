// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: game_content_currency.proto

package currency

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CurrencyResponse_CurrencyState int32

const (
	CurrencyResponse_AVAILABLE   CurrencyResponse_CurrencyState = 0
	CurrencyResponse_UNAVAILABLE CurrencyResponse_CurrencyState = 1
)

// Enum value maps for CurrencyResponse_CurrencyState.
var (
	CurrencyResponse_CurrencyState_name = map[int32]string{
		0: "AVAILABLE",
		1: "UNAVAILABLE",
	}
	CurrencyResponse_CurrencyState_value = map[string]int32{
		"AVAILABLE":   0,
		"UNAVAILABLE": 1,
	}
)

func (x CurrencyResponse_CurrencyState) Enum() *CurrencyResponse_CurrencyState {
	p := new(CurrencyResponse_CurrencyState)
	*p = x
	return p
}

func (x CurrencyResponse_CurrencyState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CurrencyResponse_CurrencyState) Descriptor() protoreflect.EnumDescriptor {
	return file_game_content_currency_proto_enumTypes[0].Descriptor()
}

func (CurrencyResponse_CurrencyState) Type() protoreflect.EnumType {
	return &file_game_content_currency_proto_enumTypes[0]
}

func (x CurrencyResponse_CurrencyState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CurrencyResponse_CurrencyState.Descriptor instead.
func (CurrencyResponse_CurrencyState) EnumDescriptor() ([]byte, []int) {
	return file_game_content_currency_proto_rawDescGZIP(), []int{2, 0}
}

type NetworkResponse_NetworkState int32

const (
	NetworkResponse_AVAILABLE   NetworkResponse_NetworkState = 0
	NetworkResponse_UNAVAILABLE NetworkResponse_NetworkState = 1
)

// Enum value maps for NetworkResponse_NetworkState.
var (
	NetworkResponse_NetworkState_name = map[int32]string{
		0: "AVAILABLE",
		1: "UNAVAILABLE",
	}
	NetworkResponse_NetworkState_value = map[string]int32{
		"AVAILABLE":   0,
		"UNAVAILABLE": 1,
	}
)

func (x NetworkResponse_NetworkState) Enum() *NetworkResponse_NetworkState {
	p := new(NetworkResponse_NetworkState)
	*p = x
	return p
}

func (x NetworkResponse_NetworkState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkResponse_NetworkState) Descriptor() protoreflect.EnumDescriptor {
	return file_game_content_currency_proto_enumTypes[1].Descriptor()
}

func (NetworkResponse_NetworkState) Type() protoreflect.EnumType {
	return &file_game_content_currency_proto_enumTypes[1]
}

func (x NetworkResponse_NetworkState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkResponse_NetworkState.Descriptor instead.
func (NetworkResponse_NetworkState) EnumDescriptor() ([]byte, []int) {
	return file_game_content_currency_proto_rawDescGZIP(), []int{4, 0}
}

type GetSingleCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *GetSingleCurrencyRequest) Reset() {
	*x = GetSingleCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_currency_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleCurrencyRequest) ProtoMessage() {}

func (x *GetSingleCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_currency_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleCurrencyRequest.ProtoReflect.Descriptor instead.
func (*GetSingleCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_game_content_currency_proto_rawDescGZIP(), []int{0}
}

func (x *GetSingleCurrencyRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type ListCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies []*CurrencyResponse `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *ListCurrencyResponse) Reset() {
	*x = ListCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_currency_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrencyResponse) ProtoMessage() {}

func (x *ListCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_currency_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrencyResponse.ProtoReflect.Descriptor instead.
func (*ListCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_game_content_currency_proto_rawDescGZIP(), []int{1}
}

func (x *ListCurrencyResponse) GetCurrencies() []*CurrencyResponse {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type CurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Symbol      string                         `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name        string                         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                         `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	State       CurrencyResponse_CurrencyState `protobuf:"varint,5,opt,name=state,proto3,enum=gamecontent.currency.CurrencyResponse_CurrencyState" json:"state,omitempty"`
	Networks    []*NetworkResponse             `protobuf:"bytes,6,rep,name=networks,proto3" json:"networks,omitempty"`
	CreatedAt   *timestamppb.Timestamp         `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp         `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CurrencyResponse) Reset() {
	*x = CurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_currency_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyResponse) ProtoMessage() {}

func (x *CurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_currency_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyResponse.ProtoReflect.Descriptor instead.
func (*CurrencyResponse) Descriptor() ([]byte, []int) {
	return file_game_content_currency_proto_rawDescGZIP(), []int{2}
}

func (x *CurrencyResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CurrencyResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CurrencyResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CurrencyResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CurrencyResponse) GetState() CurrencyResponse_CurrencyState {
	if x != nil {
		return x.State
	}
	return CurrencyResponse_AVAILABLE
}

func (x *CurrencyResponse) GetNetworks() []*NetworkResponse {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *CurrencyResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CurrencyResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListNetworkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*NetworkResponse `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
}

func (x *ListNetworkResponse) Reset() {
	*x = ListNetworkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_currency_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworkResponse) ProtoMessage() {}

func (x *ListNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_currency_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworkResponse.ProtoReflect.Descriptor instead.
func (*ListNetworkResponse) Descriptor() ([]byte, []int) {
	return file_game_content_currency_proto_rawDescGZIP(), []int{3}
}

func (x *ListNetworkResponse) GetNetworks() []*NetworkResponse {
	if x != nil {
		return x.Networks
	}
	return nil
}

type NetworkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code        string                       `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name        string                       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                       `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	State       NetworkResponse_NetworkState `protobuf:"varint,5,opt,name=state,proto3,enum=gamecontent.currency.NetworkResponse_NetworkState" json:"state,omitempty"`
	Standards   []*TokenStandardResponse     `protobuf:"bytes,6,rep,name=standards,proto3" json:"standards,omitempty"`
	Currencies  []*CurrencyResponse          `protobuf:"bytes,7,rep,name=currencies,proto3" json:"currencies,omitempty"`
	CreatedAt   *timestamppb.Timestamp       `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp       `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CanDeposit  bool                         `protobuf:"varint,10,opt,name=can_deposit,json=canDeposit,proto3" json:"can_deposit,omitempty"`
	CanWithdraw bool                         `protobuf:"varint,11,opt,name=can_withdraw,json=canWithdraw,proto3" json:"can_withdraw,omitempty"`
}

func (x *NetworkResponse) Reset() {
	*x = NetworkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_currency_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkResponse) ProtoMessage() {}

func (x *NetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_currency_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkResponse.ProtoReflect.Descriptor instead.
func (*NetworkResponse) Descriptor() ([]byte, []int) {
	return file_game_content_currency_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NetworkResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *NetworkResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NetworkResponse) GetState() NetworkResponse_NetworkState {
	if x != nil {
		return x.State
	}
	return NetworkResponse_AVAILABLE
}

func (x *NetworkResponse) GetStandards() []*TokenStandardResponse {
	if x != nil {
		return x.Standards
	}
	return nil
}

func (x *NetworkResponse) GetCurrencies() []*CurrencyResponse {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *NetworkResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NetworkResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NetworkResponse) GetCanDeposit() bool {
	if x != nil {
		return x.CanDeposit
	}
	return false
}

func (x *NetworkResponse) GetCanWithdraw() bool {
	if x != nil {
		return x.CanWithdraw
	}
	return false
}

type TokenStandardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Standard    string `protobuf:"bytes,2,opt,name=standard,proto3" json:"standard,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TokenStandardResponse) Reset() {
	*x = TokenStandardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_currency_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenStandardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenStandardResponse) ProtoMessage() {}

func (x *TokenStandardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_currency_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenStandardResponse.ProtoReflect.Descriptor instead.
func (*TokenStandardResponse) Descriptor() ([]byte, []int) {
	return file_game_content_currency_proto_rawDescGZIP(), []int{5}
}

func (x *TokenStandardResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TokenStandardResponse) GetStandard() string {
	if x != nil {
		return x.Standard
	}
	return ""
}

func (x *TokenStandardResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_game_content_currency_proto protoreflect.FileDescriptor

var file_game_content_currency_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x67,
	0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x5e, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0xa6, 0x03, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2f, 0x0a,
	0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x22, 0x58,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0xb2, 0x04, 0x0a, 0x0f, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x49, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x12, 0x46, 0x0a, 0x0a, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e,
	0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x63, 0x61, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x63, 0x61, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x22, 0x2e, 0x0a,
	0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x22, 0x65, 0x0a,
	0x15, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0xbc, 0x02, 0x0a, 0x1a, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x58, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0xca, 0x01, 0x0a, 0x2b, 0x69, 0x6f, 0x2e, 0x6d, 0x75, 0x7a, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x42, 0x18, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x54, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x7a, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x67, 0x6f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x61,
	0x6d, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0xaa, 0x02, 0x28, 0x4d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_content_currency_proto_rawDescOnce sync.Once
	file_game_content_currency_proto_rawDescData = file_game_content_currency_proto_rawDesc
)

func file_game_content_currency_proto_rawDescGZIP() []byte {
	file_game_content_currency_proto_rawDescOnce.Do(func() {
		file_game_content_currency_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_content_currency_proto_rawDescData)
	})
	return file_game_content_currency_proto_rawDescData
}

var file_game_content_currency_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_game_content_currency_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_game_content_currency_proto_goTypes = []interface{}{
	(CurrencyResponse_CurrencyState)(0), // 0: gamecontent.currency.CurrencyResponse.CurrencyState
	(NetworkResponse_NetworkState)(0),   // 1: gamecontent.currency.NetworkResponse.NetworkState
	(*GetSingleCurrencyRequest)(nil),    // 2: gamecontent.currency.GetSingleCurrencyRequest
	(*ListCurrencyResponse)(nil),        // 3: gamecontent.currency.ListCurrencyResponse
	(*CurrencyResponse)(nil),            // 4: gamecontent.currency.CurrencyResponse
	(*ListNetworkResponse)(nil),         // 5: gamecontent.currency.ListNetworkResponse
	(*NetworkResponse)(nil),             // 6: gamecontent.currency.NetworkResponse
	(*TokenStandardResponse)(nil),       // 7: gamecontent.currency.TokenStandardResponse
	(*timestamppb.Timestamp)(nil),       // 8: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 9: google.protobuf.Empty
}
var file_game_content_currency_proto_depIdxs = []int32{
	4,  // 0: gamecontent.currency.ListCurrencyResponse.currencies:type_name -> gamecontent.currency.CurrencyResponse
	0,  // 1: gamecontent.currency.CurrencyResponse.state:type_name -> gamecontent.currency.CurrencyResponse.CurrencyState
	6,  // 2: gamecontent.currency.CurrencyResponse.networks:type_name -> gamecontent.currency.NetworkResponse
	8,  // 3: gamecontent.currency.CurrencyResponse.created_at:type_name -> google.protobuf.Timestamp
	8,  // 4: gamecontent.currency.CurrencyResponse.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 5: gamecontent.currency.ListNetworkResponse.networks:type_name -> gamecontent.currency.NetworkResponse
	1,  // 6: gamecontent.currency.NetworkResponse.state:type_name -> gamecontent.currency.NetworkResponse.NetworkState
	7,  // 7: gamecontent.currency.NetworkResponse.standards:type_name -> gamecontent.currency.TokenStandardResponse
	4,  // 8: gamecontent.currency.NetworkResponse.currencies:type_name -> gamecontent.currency.CurrencyResponse
	8,  // 9: gamecontent.currency.NetworkResponse.created_at:type_name -> google.protobuf.Timestamp
	8,  // 10: gamecontent.currency.NetworkResponse.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 11: gamecontent.currency.GameContentCurrencyService.GetSingleCurrency:input_type -> gamecontent.currency.GetSingleCurrencyRequest
	9,  // 12: gamecontent.currency.GameContentCurrencyService.GetAllCurrencies:input_type -> google.protobuf.Empty
	9,  // 13: gamecontent.currency.GameContentCurrencyService.GetAllNetworks:input_type -> google.protobuf.Empty
	4,  // 14: gamecontent.currency.GameContentCurrencyService.GetSingleCurrency:output_type -> gamecontent.currency.CurrencyResponse
	3,  // 15: gamecontent.currency.GameContentCurrencyService.GetAllCurrencies:output_type -> gamecontent.currency.ListCurrencyResponse
	5,  // 16: gamecontent.currency.GameContentCurrencyService.GetAllNetworks:output_type -> gamecontent.currency.ListNetworkResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_game_content_currency_proto_init() }
func file_game_content_currency_proto_init() {
	if File_game_content_currency_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_content_currency_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_currency_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_currency_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_currency_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNetworkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_currency_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_currency_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenStandardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_content_currency_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_content_currency_proto_goTypes,
		DependencyIndexes: file_game_content_currency_proto_depIdxs,
		EnumInfos:         file_game_content_currency_proto_enumTypes,
		MessageInfos:      file_game_content_currency_proto_msgTypes,
	}.Build()
	File_game_content_currency_proto = out.File
	file_game_content_currency_proto_rawDesc = nil
	file_game_content_currency_proto_goTypes = nil
	file_game_content_currency_proto_depIdxs = nil
}
