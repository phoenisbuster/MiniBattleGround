// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: game_content_video_config.proto

package videoconfig

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVideoLinkConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IslandCode string `protobuf:"bytes,1,opt,name=island_code,json=islandCode,proto3" json:"island_code,omitempty"`
}

func (x *GetVideoLinkConfigRequest) Reset() {
	*x = GetVideoLinkConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_video_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoLinkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoLinkConfigRequest) ProtoMessage() {}

func (x *GetVideoLinkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_video_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoLinkConfigRequest.ProtoReflect.Descriptor instead.
func (*GetVideoLinkConfigRequest) Descriptor() ([]byte, []int) {
	return file_game_content_video_config_proto_rawDescGZIP(), []int{0}
}

func (x *GetVideoLinkConfigRequest) GetIslandCode() string {
	if x != nil {
		return x.IslandCode
	}
	return ""
}

type GetVideoLinkConfigByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetVideoLinkConfigByIdsRequest) Reset() {
	*x = GetVideoLinkConfigByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_video_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoLinkConfigByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoLinkConfigByIdsRequest) ProtoMessage() {}

func (x *GetVideoLinkConfigByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_video_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoLinkConfigByIdsRequest.ProtoReflect.Descriptor instead.
func (*GetVideoLinkConfigByIdsRequest) Descriptor() ([]byte, []int) {
	return file_game_content_video_config_proto_rawDescGZIP(), []int{1}
}

func (x *GetVideoLinkConfigByIdsRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type VideoLinkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VideoLink   string                 `protobuf:"bytes,2,opt,name=video_link,json=videoLink,proto3" json:"video_link,omitempty"`
	BaseTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=base_time,json=baseTime,proto3" json:"base_time,omitempty"`
	IsStream    bool                   `protobuf:"varint,4,opt,name=is_stream,json=isStream,proto3" json:"is_stream,omitempty"`
	DefaultLink string                 `protobuf:"bytes,5,opt,name=default_link,json=defaultLink,proto3" json:"default_link,omitempty"`
	IslandCode  string                 `protobuf:"bytes,6,opt,name=island_code,json=islandCode,proto3" json:"island_code,omitempty"`
}

func (x *VideoLinkConfig) Reset() {
	*x = VideoLinkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_video_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoLinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoLinkConfig) ProtoMessage() {}

func (x *VideoLinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_video_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoLinkConfig.ProtoReflect.Descriptor instead.
func (*VideoLinkConfig) Descriptor() ([]byte, []int) {
	return file_game_content_video_config_proto_rawDescGZIP(), []int{2}
}

func (x *VideoLinkConfig) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VideoLinkConfig) GetVideoLink() string {
	if x != nil {
		return x.VideoLink
	}
	return ""
}

func (x *VideoLinkConfig) GetBaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BaseTime
	}
	return nil
}

func (x *VideoLinkConfig) GetIsStream() bool {
	if x != nil {
		return x.IsStream
	}
	return false
}

func (x *VideoLinkConfig) GetDefaultLink() string {
	if x != nil {
		return x.DefaultLink
	}
	return ""
}

func (x *VideoLinkConfig) GetIslandCode() string {
	if x != nil {
		return x.IslandCode
	}
	return ""
}

type VideoLinkConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoLinkConfigs []*VideoLinkConfig `protobuf:"bytes,1,rep,name=video_link_configs,json=videoLinkConfigs,proto3" json:"video_link_configs,omitempty"`
}

func (x *VideoLinkConfigResponse) Reset() {
	*x = VideoLinkConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_video_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoLinkConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoLinkConfigResponse) ProtoMessage() {}

func (x *VideoLinkConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_video_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoLinkConfigResponse.ProtoReflect.Descriptor instead.
func (*VideoLinkConfigResponse) Descriptor() ([]byte, []int) {
	return file_game_content_video_config_proto_rawDescGZIP(), []int{3}
}

func (x *VideoLinkConfigResponse) GetVideoLinkConfigs() []*VideoLinkConfig {
	if x != nil {
		return x.VideoLinkConfigs
	}
	return nil
}

type CreateVideoLinkConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IslandCode       string             `protobuf:"bytes,1,opt,name=island_code,json=islandCode,proto3" json:"island_code,omitempty"`
	VideoLinkConfigs []*VideoLinkConfig `protobuf:"bytes,2,rep,name=video_link_configs,json=videoLinkConfigs,proto3" json:"video_link_configs,omitempty"`
}

func (x *CreateVideoLinkConfigRequest) Reset() {
	*x = CreateVideoLinkConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_video_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVideoLinkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoLinkConfigRequest) ProtoMessage() {}

func (x *CreateVideoLinkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_video_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoLinkConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateVideoLinkConfigRequest) Descriptor() ([]byte, []int) {
	return file_game_content_video_config_proto_rawDescGZIP(), []int{4}
}

func (x *CreateVideoLinkConfigRequest) GetIslandCode() string {
	if x != nil {
		return x.IslandCode
	}
	return ""
}

func (x *CreateVideoLinkConfigRequest) GetVideoLinkConfigs() []*VideoLinkConfig {
	if x != nil {
		return x.VideoLinkConfigs
	}
	return nil
}

type UpdateVideoLinkConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoLinkConfigs []*VideoLinkConfig `protobuf:"bytes,1,rep,name=video_link_configs,json=videoLinkConfigs,proto3" json:"video_link_configs,omitempty"`
}

func (x *UpdateVideoLinkConfigRequest) Reset() {
	*x = UpdateVideoLinkConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_video_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVideoLinkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVideoLinkConfigRequest) ProtoMessage() {}

func (x *UpdateVideoLinkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_video_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVideoLinkConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateVideoLinkConfigRequest) Descriptor() ([]byte, []int) {
	return file_game_content_video_config_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateVideoLinkConfigRequest) GetVideoLinkConfigs() []*VideoLinkConfig {
	if x != nil {
		return x.VideoLinkConfigs
	}
	return nil
}

type DeleteVideoLinkConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkConfigIds []int64 `protobuf:"varint,1,rep,packed,name=link_config_ids,json=linkConfigIds,proto3" json:"link_config_ids,omitempty"`
}

func (x *DeleteVideoLinkConfigRequest) Reset() {
	*x = DeleteVideoLinkConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_video_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVideoLinkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVideoLinkConfigRequest) ProtoMessage() {}

func (x *DeleteVideoLinkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_video_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVideoLinkConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteVideoLinkConfigRequest) Descriptor() ([]byte, []int) {
	return file_game_content_video_config_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteVideoLinkConfigRequest) GetLinkConfigIds() []int64 {
	if x != nil {
		return x.LinkConfigIds
	}
	return nil
}

var File_game_content_video_config_proto protoreflect.FileDescriptor

var file_game_content_video_config_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x6c, 0x61,
	0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x0f, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x37, 0x0a,
	0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x6c,
	0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x71, 0x0a, 0x17, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x56, 0x0a, 0x12,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x22, 0x76, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x46, 0x0a, 0x1c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x64, 0x73, 0x32, 0xe1, 0x04, 0x0a, 0x1a, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x37, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x35, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x68,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0xcf, 0x01, 0x0a, 0x2e, 0x69, 0x6f, 0x2e,
	0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x18, 0x47, 0x61, 0x6d,
	0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x6f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0xaa, 0x02, 0x2b, 0x4d,
	0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_game_content_video_config_proto_rawDescOnce sync.Once
	file_game_content_video_config_proto_rawDescData = file_game_content_video_config_proto_rawDesc
)

func file_game_content_video_config_proto_rawDescGZIP() []byte {
	file_game_content_video_config_proto_rawDescOnce.Do(func() {
		file_game_content_video_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_content_video_config_proto_rawDescData)
	})
	return file_game_content_video_config_proto_rawDescData
}

var file_game_content_video_config_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_game_content_video_config_proto_goTypes = []interface{}{
	(*GetVideoLinkConfigRequest)(nil),      // 0: gamecontent.videoconfig.GetVideoLinkConfigRequest
	(*GetVideoLinkConfigByIdsRequest)(nil), // 1: gamecontent.videoconfig.GetVideoLinkConfigByIdsRequest
	(*VideoLinkConfig)(nil),                // 2: gamecontent.videoconfig.VideoLinkConfig
	(*VideoLinkConfigResponse)(nil),        // 3: gamecontent.videoconfig.VideoLinkConfigResponse
	(*CreateVideoLinkConfigRequest)(nil),   // 4: gamecontent.videoconfig.CreateVideoLinkConfigRequest
	(*UpdateVideoLinkConfigRequest)(nil),   // 5: gamecontent.videoconfig.UpdateVideoLinkConfigRequest
	(*DeleteVideoLinkConfigRequest)(nil),   // 6: gamecontent.videoconfig.DeleteVideoLinkConfigRequest
	(*timestamppb.Timestamp)(nil),          // 7: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                  // 8: google.protobuf.Empty
}
var file_game_content_video_config_proto_depIdxs = []int32{
	7, // 0: gamecontent.videoconfig.VideoLinkConfig.base_time:type_name -> google.protobuf.Timestamp
	2, // 1: gamecontent.videoconfig.VideoLinkConfigResponse.video_link_configs:type_name -> gamecontent.videoconfig.VideoLinkConfig
	2, // 2: gamecontent.videoconfig.CreateVideoLinkConfigRequest.video_link_configs:type_name -> gamecontent.videoconfig.VideoLinkConfig
	2, // 3: gamecontent.videoconfig.UpdateVideoLinkConfigRequest.video_link_configs:type_name -> gamecontent.videoconfig.VideoLinkConfig
	0, // 4: gamecontent.videoconfig.GameVideoLinkConfigService.GetVideoLinkConfig:input_type -> gamecontent.videoconfig.GetVideoLinkConfigRequest
	1, // 5: gamecontent.videoconfig.GameVideoLinkConfigService.GetVideoLinkConfigByIds:input_type -> gamecontent.videoconfig.GetVideoLinkConfigByIdsRequest
	4, // 6: gamecontent.videoconfig.GameVideoLinkConfigService.CreateVideoLinkConfig:input_type -> gamecontent.videoconfig.CreateVideoLinkConfigRequest
	5, // 7: gamecontent.videoconfig.GameVideoLinkConfigService.UpdateVideoLinkConfig:input_type -> gamecontent.videoconfig.UpdateVideoLinkConfigRequest
	6, // 8: gamecontent.videoconfig.GameVideoLinkConfigService.DeleteVideoLinkConfig:input_type -> gamecontent.videoconfig.DeleteVideoLinkConfigRequest
	3, // 9: gamecontent.videoconfig.GameVideoLinkConfigService.GetVideoLinkConfig:output_type -> gamecontent.videoconfig.VideoLinkConfigResponse
	3, // 10: gamecontent.videoconfig.GameVideoLinkConfigService.GetVideoLinkConfigByIds:output_type -> gamecontent.videoconfig.VideoLinkConfigResponse
	8, // 11: gamecontent.videoconfig.GameVideoLinkConfigService.CreateVideoLinkConfig:output_type -> google.protobuf.Empty
	8, // 12: gamecontent.videoconfig.GameVideoLinkConfigService.UpdateVideoLinkConfig:output_type -> google.protobuf.Empty
	8, // 13: gamecontent.videoconfig.GameVideoLinkConfigService.DeleteVideoLinkConfig:output_type -> google.protobuf.Empty
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_game_content_video_config_proto_init() }
func file_game_content_video_config_proto_init() {
	if File_game_content_video_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_content_video_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoLinkConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_video_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoLinkConfigByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_video_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoLinkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_video_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoLinkConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_video_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVideoLinkConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_video_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVideoLinkConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_video_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVideoLinkConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_content_video_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_content_video_config_proto_goTypes,
		DependencyIndexes: file_game_content_video_config_proto_depIdxs,
		MessageInfos:      file_game_content_video_config_proto_msgTypes,
	}.Build()
	File_game_content_video_config_proto = out.File
	file_game_content_video_config_proto_rawDesc = nil
	file_game_content_video_config_proto_goTypes = nil
	file_game_content_video_config_proto_depIdxs = nil
}
