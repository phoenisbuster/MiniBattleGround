// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: game_content_game_object.proto

package game_object

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	domain "gitlab.com/muziverse/common/protogogenerator/game-content-proto-api/pkg/domain"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryGameObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Version  int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *QueryGameObject) Reset() {
	*x = QueryGameObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGameObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGameObject) ProtoMessage() {}

func (x *QueryGameObject) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGameObject.ProtoReflect.Descriptor instead.
func (*QueryGameObject) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{0}
}

func (x *QueryGameObject) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *QueryGameObject) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GameObjectByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flatten       bool               `protobuf:"varint,1,opt,name=flatten,proto3" json:"flatten,omitempty"`
	QueriesObject []*QueryGameObject `protobuf:"bytes,2,rep,name=queries_object,json=queriesObject,proto3" json:"queries_object,omitempty"`
}

func (x *GameObjectByIdsRequest) Reset() {
	*x = GameObjectByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameObjectByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameObjectByIdsRequest) ProtoMessage() {}

func (x *GameObjectByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameObjectByIdsRequest.ProtoReflect.Descriptor instead.
func (*GameObjectByIdsRequest) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{1}
}

func (x *GameObjectByIdsRequest) GetFlatten() bool {
	if x != nil {
		return x.Flatten
	}
	return false
}

func (x *GameObjectByIdsRequest) GetQueriesObject() []*QueryGameObject {
	if x != nil {
		return x.QueriesObject
	}
	return nil
}

type GameObjectByIslandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flatten    bool   `protobuf:"varint,1,opt,name=flatten,proto3" json:"flatten,omitempty"`
	IslandCode string `protobuf:"bytes,2,opt,name=island_code,json=islandCode,proto3" json:"island_code,omitempty"`
}

func (x *GameObjectByIslandRequest) Reset() {
	*x = GameObjectByIslandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameObjectByIslandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameObjectByIslandRequest) ProtoMessage() {}

func (x *GameObjectByIslandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameObjectByIslandRequest.ProtoReflect.Descriptor instead.
func (*GameObjectByIslandRequest) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{2}
}

func (x *GameObjectByIslandRequest) GetFlatten() bool {
	if x != nil {
		return x.Flatten
	}
	return false
}

func (x *GameObjectByIslandRequest) GetIslandCode() string {
	if x != nil {
		return x.IslandCode
	}
	return ""
}

type GameObjectByPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flatten    bool              `protobuf:"varint,1,opt,name=flatten,proto3" json:"flatten,omitempty"`
	IslandCode string            `protobuf:"bytes,2,opt,name=island_code,json=islandCode,proto3" json:"island_code,omitempty"`
	Position   *domain.Point2Int `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *GameObjectByPositionRequest) Reset() {
	*x = GameObjectByPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameObjectByPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameObjectByPositionRequest) ProtoMessage() {}

func (x *GameObjectByPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameObjectByPositionRequest.ProtoReflect.Descriptor instead.
func (*GameObjectByPositionRequest) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{3}
}

func (x *GameObjectByPositionRequest) GetFlatten() bool {
	if x != nil {
		return x.Flatten
	}
	return false
}

func (x *GameObjectByPositionRequest) GetIslandCode() string {
	if x != nil {
		return x.IslandCode
	}
	return ""
}

func (x *GameObjectByPositionRequest) GetPosition() *domain.Point2Int {
	if x != nil {
		return x.Position
	}
	return nil
}

type GameObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentId string                 `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Version  int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Type     domain.GameObjectType  `protobuf:"varint,5,opt,name=type,proto3,enum=GameObjectType" json:"type,omitempty"`
	Metadata []*domain.GameMetadata `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty"`
	Children []*GameObjectResponse  `protobuf:"bytes,7,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *GameObjectResponse) Reset() {
	*x = GameObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameObjectResponse) ProtoMessage() {}

func (x *GameObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameObjectResponse.ProtoReflect.Descriptor instead.
func (*GameObjectResponse) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{4}
}

func (x *GameObjectResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameObjectResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameObjectResponse) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *GameObjectResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GameObjectResponse) GetType() domain.GameObjectType {
	if x != nil {
		return x.Type
	}
	return domain.GameObjectType(0)
}

func (x *GameObjectResponse) GetMetadata() []*domain.GameMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GameObjectResponse) GetChildren() []*GameObjectResponse {
	if x != nil {
		return x.Children
	}
	return nil
}

type UpdateObjectMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata []*domain.GameMetadata `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateObjectMetadataRequest) Reset() {
	*x = UpdateObjectMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateObjectMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectMetadataRequest) ProtoMessage() {}

func (x *UpdateObjectMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectMetadataRequest) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateObjectMetadataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateObjectMetadataRequest) GetMetadata() []*domain.GameMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ListGameObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameObjects []*GameObjectResponse `protobuf:"bytes,1,rep,name=game_objects,json=gameObjects,proto3" json:"game_objects,omitempty"`
}

func (x *ListGameObjectResponse) Reset() {
	*x = ListGameObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGameObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGameObjectResponse) ProtoMessage() {}

func (x *ListGameObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGameObjectResponse.ProtoReflect.Descriptor instead.
func (*ListGameObjectResponse) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{6}
}

func (x *ListGameObjectResponse) GetGameObjects() []*GameObjectResponse {
	if x != nil {
		return x.GameObjects
	}
	return nil
}

type GameObjectItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IslandCode string                   `protobuf:"bytes,2,opt,name=island_code,json=islandCode,proto3" json:"island_code,omitempty"`
	Level      int32                    `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Name       string                   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ParentId   string                   `protobuf:"bytes,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Type       domain.GameObjectType    `protobuf:"varint,6,opt,name=type,proto3,enum=GameObjectType" json:"type,omitempty"`
	Metadata   []*domain.GameMetadata   `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty"`
	Children   []*GameObjectItemRequest `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *GameObjectItemRequest) Reset() {
	*x = GameObjectItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameObjectItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameObjectItemRequest) ProtoMessage() {}

func (x *GameObjectItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameObjectItemRequest.ProtoReflect.Descriptor instead.
func (*GameObjectItemRequest) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{7}
}

func (x *GameObjectItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameObjectItemRequest) GetIslandCode() string {
	if x != nil {
		return x.IslandCode
	}
	return ""
}

func (x *GameObjectItemRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GameObjectItemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameObjectItemRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *GameObjectItemRequest) GetType() domain.GameObjectType {
	if x != nil {
		return x.Type
	}
	return domain.GameObjectType(0)
}

func (x *GameObjectItemRequest) GetMetadata() []*domain.GameMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GameObjectItemRequest) GetChildren() []*GameObjectItemRequest {
	if x != nil {
		return x.Children
	}
	return nil
}

type CreateObjectTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameObjects []*GameObjectItemRequest `protobuf:"bytes,1,rep,name=game_objects,json=gameObjects,proto3" json:"game_objects,omitempty"`
}

func (x *CreateObjectTreeRequest) Reset() {
	*x = CreateObjectTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectTreeRequest) ProtoMessage() {}

func (x *CreateObjectTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectTreeRequest.ProtoReflect.Descriptor instead.
func (*CreateObjectTreeRequest) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{8}
}

func (x *CreateObjectTreeRequest) GetGameObjects() []*GameObjectItemRequest {
	if x != nil {
		return x.GameObjects
	}
	return nil
}

type UpdateObjectTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameObjects []*GameObjectItemRequest `protobuf:"bytes,1,rep,name=game_objects,json=gameObjects,proto3" json:"game_objects,omitempty"`
}

func (x *UpdateObjectTreeRequest) Reset() {
	*x = UpdateObjectTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_game_object_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateObjectTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectTreeRequest) ProtoMessage() {}

func (x *UpdateObjectTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_game_object_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectTreeRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectTreeRequest) Descriptor() ([]byte, []int) {
	return file_game_content_game_object_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateObjectTreeRequest) GetGameObjects() []*GameObjectItemRequest {
	if x != nil {
		return x.GameObjects
	}
	return nil
}

var File_game_content_game_object_proto protoreflect.FileDescriptor

var file_game_content_game_object_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x16, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x20, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x61,
	0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x82, 0x01, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x6c, 0x61,
	0x74, 0x74, 0x65, 0x6e, 0x12, 0x4e, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0x5f, 0x0a, 0x19, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x79, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0b, 0x69,
	0x73, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x69, 0x73, 0x6c, 0x61, 0x6e,
	0x64, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x1b, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x12,
	0x28, 0x0a, 0x0b, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x69,
	0x73, 0x6c, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x32, 0x49, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x87, 0x02, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x58, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xaa,
	0x02, 0x0a, 0x15, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x6c, 0x61,
	0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x73, 0x6c, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x49, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x6b, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x67, 0x61, 0x6d,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x6b, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x32, 0xb9, 0x05, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x73,
	0x6c, 0x61, 0x6e, 0x64, 0x12, 0x31, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x12, 0x2e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x2f, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2f, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x33, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x42, 0xcf, 0x01, 0x0a, 0x2d, 0x69, 0x6f, 0x2e, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x57, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x6f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x61, 0x6d, 0x65,
	0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2d,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0xaa, 0x02, 0x2a, 0x4d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_content_game_object_proto_rawDescOnce sync.Once
	file_game_content_game_object_proto_rawDescData = file_game_content_game_object_proto_rawDesc
)

func file_game_content_game_object_proto_rawDescGZIP() []byte {
	file_game_content_game_object_proto_rawDescOnce.Do(func() {
		file_game_content_game_object_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_content_game_object_proto_rawDescData)
	})
	return file_game_content_game_object_proto_rawDescData
}

var file_game_content_game_object_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_game_content_game_object_proto_goTypes = []interface{}{
	(*QueryGameObject)(nil),             // 0: gamecontent.gameobject.QueryGameObject
	(*GameObjectByIdsRequest)(nil),      // 1: gamecontent.gameobject.GameObjectByIdsRequest
	(*GameObjectByIslandRequest)(nil),   // 2: gamecontent.gameobject.GameObjectByIslandRequest
	(*GameObjectByPositionRequest)(nil), // 3: gamecontent.gameobject.GameObjectByPositionRequest
	(*GameObjectResponse)(nil),          // 4: gamecontent.gameobject.GameObjectResponse
	(*UpdateObjectMetadataRequest)(nil), // 5: gamecontent.gameobject.UpdateObjectMetadataRequest
	(*ListGameObjectResponse)(nil),      // 6: gamecontent.gameobject.ListGameObjectResponse
	(*GameObjectItemRequest)(nil),       // 7: gamecontent.gameobject.GameObjectItemRequest
	(*CreateObjectTreeRequest)(nil),     // 8: gamecontent.gameobject.CreateObjectTreeRequest
	(*UpdateObjectTreeRequest)(nil),     // 9: gamecontent.gameobject.UpdateObjectTreeRequest
	(*domain.Point2Int)(nil),            // 10: Point2Int
	(domain.GameObjectType)(0),          // 11: GameObjectType
	(*domain.GameMetadata)(nil),         // 12: GameMetadata
	(*emptypb.Empty)(nil),               // 13: google.protobuf.Empty
}
var file_game_content_game_object_proto_depIdxs = []int32{
	0,  // 0: gamecontent.gameobject.GameObjectByIdsRequest.queries_object:type_name -> gamecontent.gameobject.QueryGameObject
	10, // 1: gamecontent.gameobject.GameObjectByPositionRequest.position:type_name -> Point2Int
	11, // 2: gamecontent.gameobject.GameObjectResponse.type:type_name -> GameObjectType
	12, // 3: gamecontent.gameobject.GameObjectResponse.metadata:type_name -> GameMetadata
	4,  // 4: gamecontent.gameobject.GameObjectResponse.children:type_name -> gamecontent.gameobject.GameObjectResponse
	12, // 5: gamecontent.gameobject.UpdateObjectMetadataRequest.metadata:type_name -> GameMetadata
	4,  // 6: gamecontent.gameobject.ListGameObjectResponse.game_objects:type_name -> gamecontent.gameobject.GameObjectResponse
	11, // 7: gamecontent.gameobject.GameObjectItemRequest.type:type_name -> GameObjectType
	12, // 8: gamecontent.gameobject.GameObjectItemRequest.metadata:type_name -> GameMetadata
	7,  // 9: gamecontent.gameobject.GameObjectItemRequest.children:type_name -> gamecontent.gameobject.GameObjectItemRequest
	7,  // 10: gamecontent.gameobject.CreateObjectTreeRequest.game_objects:type_name -> gamecontent.gameobject.GameObjectItemRequest
	7,  // 11: gamecontent.gameobject.UpdateObjectTreeRequest.game_objects:type_name -> gamecontent.gameobject.GameObjectItemRequest
	2,  // 12: gamecontent.gameobject.GameObjectService.GetGameObjectByIsland:input_type -> gamecontent.gameobject.GameObjectByIslandRequest
	3,  // 13: gamecontent.gameobject.GameObjectService.GetGameObjectByPosition:input_type -> gamecontent.gameobject.GameObjectByPositionRequest
	1,  // 14: gamecontent.gameobject.GameObjectService.GetGameObjectByIds:input_type -> gamecontent.gameobject.GameObjectByIdsRequest
	8,  // 15: gamecontent.gameobject.GameObjectService.CreateGameObjectTree:input_type -> gamecontent.gameobject.CreateObjectTreeRequest
	9,  // 16: gamecontent.gameobject.GameObjectService.UpdateGameObject:input_type -> gamecontent.gameobject.UpdateObjectTreeRequest
	5,  // 17: gamecontent.gameobject.GameObjectService.UpdateGameObjectMetadata:input_type -> gamecontent.gameobject.UpdateObjectMetadataRequest
	6,  // 18: gamecontent.gameobject.GameObjectService.GetGameObjectByIsland:output_type -> gamecontent.gameobject.ListGameObjectResponse
	6,  // 19: gamecontent.gameobject.GameObjectService.GetGameObjectByPosition:output_type -> gamecontent.gameobject.ListGameObjectResponse
	6,  // 20: gamecontent.gameobject.GameObjectService.GetGameObjectByIds:output_type -> gamecontent.gameobject.ListGameObjectResponse
	13, // 21: gamecontent.gameobject.GameObjectService.CreateGameObjectTree:output_type -> google.protobuf.Empty
	13, // 22: gamecontent.gameobject.GameObjectService.UpdateGameObject:output_type -> google.protobuf.Empty
	13, // 23: gamecontent.gameobject.GameObjectService.UpdateGameObjectMetadata:output_type -> google.protobuf.Empty
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_game_content_game_object_proto_init() }
func file_game_content_game_object_proto_init() {
	if File_game_content_game_object_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_content_game_object_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGameObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_game_object_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameObjectByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_game_object_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameObjectByIslandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_game_object_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameObjectByPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_game_object_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_game_object_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateObjectMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_game_object_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGameObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_game_object_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameObjectItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_game_object_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateObjectTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_game_object_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateObjectTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_content_game_object_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_content_game_object_proto_goTypes,
		DependencyIndexes: file_game_content_game_object_proto_depIdxs,
		MessageInfos:      file_game_content_game_object_proto_msgTypes,
	}.Build()
	File_game_content_game_object_proto = out.File
	file_game_content_game_object_proto_rawDesc = nil
	file_game_content_game_object_proto_goTypes = nil
	file_game_content_game_object_proto_depIdxs = nil
}
