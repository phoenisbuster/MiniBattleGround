// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: game_content_server_instance.proto

package serverinstance

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	domain "gitlab.com/muziverse/common/protogogenerator/game-content-proto-api/domain"
	domain1 "gitlab.com/muziverse/common/protogogenerator/kubernetes-proto-api/domain"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerInstanceQueryAction int32

const (
	ServerInstanceQueryAction_SERVER_INSTANCE_ALL  ServerInstanceQueryAction = 0
	ServerInstanceQueryAction_ISLAND_INSTANCE_ONLY ServerInstanceQueryAction = 1
	ServerInstanceQueryAction_GAME_INSTANCE_ONLY   ServerInstanceQueryAction = 2
	ServerInstanceQueryAction_FLEET_ID_ONLY        ServerInstanceQueryAction = 3
)

// Enum value maps for ServerInstanceQueryAction.
var (
	ServerInstanceQueryAction_name = map[int32]string{
		0: "SERVER_INSTANCE_ALL",
		1: "ISLAND_INSTANCE_ONLY",
		2: "GAME_INSTANCE_ONLY",
		3: "FLEET_ID_ONLY",
	}
	ServerInstanceQueryAction_value = map[string]int32{
		"SERVER_INSTANCE_ALL":  0,
		"ISLAND_INSTANCE_ONLY": 1,
		"GAME_INSTANCE_ONLY":   2,
		"FLEET_ID_ONLY":        3,
	}
)

func (x ServerInstanceQueryAction) Enum() *ServerInstanceQueryAction {
	p := new(ServerInstanceQueryAction)
	*p = x
	return p
}

func (x ServerInstanceQueryAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerInstanceQueryAction) Descriptor() protoreflect.EnumDescriptor {
	return file_game_content_server_instance_proto_enumTypes[0].Descriptor()
}

func (ServerInstanceQueryAction) Type() protoreflect.EnumType {
	return &file_game_content_server_instance_proto_enumTypes[0]
}

func (x ServerInstanceQueryAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerInstanceQueryAction.Descriptor instead.
func (ServerInstanceQueryAction) EnumDescriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{0}
}

type ServerInstanceQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryAction ServerInstanceQueryAction `protobuf:"varint,1,opt,name=queryAction,proto3,enum=gamecontent.serverinstance.ServerInstanceQueryAction" json:"queryAction,omitempty"`
	// Types that are assignable to Request:
	//	*ServerInstanceQueryRequest_IslandFilter
	//	*ServerInstanceQueryRequest_GameFilter
	//	*ServerInstanceQueryRequest_FleetIdsFilter
	Request isServerInstanceQueryRequest_Request `protobuf_oneof:"request"`
}

func (x *ServerInstanceQueryRequest) Reset() {
	*x = ServerInstanceQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_server_instance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInstanceQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInstanceQueryRequest) ProtoMessage() {}

func (x *ServerInstanceQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_server_instance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInstanceQueryRequest.ProtoReflect.Descriptor instead.
func (*ServerInstanceQueryRequest) Descriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{0}
}

func (x *ServerInstanceQueryRequest) GetQueryAction() ServerInstanceQueryAction {
	if x != nil {
		return x.QueryAction
	}
	return ServerInstanceQueryAction_SERVER_INSTANCE_ALL
}

func (m *ServerInstanceQueryRequest) GetRequest() isServerInstanceQueryRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ServerInstanceQueryRequest) GetIslandFilter() *IslandServerInstanceFilter {
	if x, ok := x.GetRequest().(*ServerInstanceQueryRequest_IslandFilter); ok {
		return x.IslandFilter
	}
	return nil
}

func (x *ServerInstanceQueryRequest) GetGameFilter() *GameServerInstanceFilter {
	if x, ok := x.GetRequest().(*ServerInstanceQueryRequest_GameFilter); ok {
		return x.GameFilter
	}
	return nil
}

func (x *ServerInstanceQueryRequest) GetFleetIdsFilter() *FleetInstanceFilter {
	if x, ok := x.GetRequest().(*ServerInstanceQueryRequest_FleetIdsFilter); ok {
		return x.FleetIdsFilter
	}
	return nil
}

type isServerInstanceQueryRequest_Request interface {
	isServerInstanceQueryRequest_Request()
}

type ServerInstanceQueryRequest_IslandFilter struct {
	IslandFilter *IslandServerInstanceFilter `protobuf:"bytes,2,opt,name=islandFilter,proto3,oneof"`
}

type ServerInstanceQueryRequest_GameFilter struct {
	GameFilter *GameServerInstanceFilter `protobuf:"bytes,3,opt,name=gameFilter,proto3,oneof"`
}

type ServerInstanceQueryRequest_FleetIdsFilter struct {
	FleetIdsFilter *FleetInstanceFilter `protobuf:"bytes,4,opt,name=fleetIdsFilter,proto3,oneof"`
}

func (*ServerInstanceQueryRequest_IslandFilter) isServerInstanceQueryRequest_Request() {}

func (*ServerInstanceQueryRequest_GameFilter) isServerInstanceQueryRequest_Request() {}

func (*ServerInstanceQueryRequest_FleetIdsFilter) isServerInstanceQueryRequest_Request() {}

type IslandServerInstanceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IslandCode string              `protobuf:"bytes,1,opt,name=islandCode,proto3" json:"islandCode,omitempty"`
	Status     domain.IslandStatus `protobuf:"varint,2,opt,name=status,proto3,enum=IslandStatus" json:"status,omitempty"`
}

func (x *IslandServerInstanceFilter) Reset() {
	*x = IslandServerInstanceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_server_instance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IslandServerInstanceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IslandServerInstanceFilter) ProtoMessage() {}

func (x *IslandServerInstanceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_server_instance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IslandServerInstanceFilter.ProtoReflect.Descriptor instead.
func (*IslandServerInstanceFilter) Descriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{1}
}

func (x *IslandServerInstanceFilter) GetIslandCode() string {
	if x != nil {
		return x.IslandCode
	}
	return ""
}

func (x *IslandServerInstanceFilter) GetStatus() domain.IslandStatus {
	if x != nil {
		return x.Status
	}
	return domain.IslandStatus(0)
}

type GameServerInstanceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSymbol         string `protobuf:"bytes,1,opt,name=gameSymbol,proto3" json:"gameSymbol,omitempty"`
	IslandInstanceCode string `protobuf:"bytes,2,opt,name=islandInstanceCode,proto3" json:"islandInstanceCode,omitempty"`
}

func (x *GameServerInstanceFilter) Reset() {
	*x = GameServerInstanceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_server_instance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameServerInstanceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameServerInstanceFilter) ProtoMessage() {}

func (x *GameServerInstanceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_server_instance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameServerInstanceFilter.ProtoReflect.Descriptor instead.
func (*GameServerInstanceFilter) Descriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{2}
}

func (x *GameServerInstanceFilter) GetGameSymbol() string {
	if x != nil {
		return x.GameSymbol
	}
	return ""
}

func (x *GameServerInstanceFilter) GetIslandInstanceCode() string {
	if x != nil {
		return x.IslandInstanceCode
	}
	return ""
}

type FleetInstanceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FleetIds []string `protobuf:"bytes,1,rep,name=fleetIds,proto3" json:"fleetIds,omitempty"`
}

func (x *FleetInstanceFilter) Reset() {
	*x = FleetInstanceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_server_instance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FleetInstanceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FleetInstanceFilter) ProtoMessage() {}

func (x *FleetInstanceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_server_instance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FleetInstanceFilter.ProtoReflect.Descriptor instead.
func (*FleetInstanceFilter) Descriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{3}
}

func (x *FleetInstanceFilter) GetFleetIds() []string {
	if x != nil {
		return x.FleetIds
	}
	return nil
}

type ListServerInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*domain.GameContentServerInstance `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *ListServerInstanceResponse) Reset() {
	*x = ListServerInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_server_instance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServerInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServerInstanceResponse) ProtoMessage() {}

func (x *ListServerInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_server_instance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServerInstanceResponse.ProtoReflect.Descriptor instead.
func (*ListServerInstanceResponse) Descriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{4}
}

func (x *ListServerInstanceResponse) GetInstances() []*domain.GameContentServerInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type GetListServerInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentInstanceCode string                `protobuf:"bytes,1,opt,name=parent_instance_code,json=parentInstanceCode,proto3" json:"parent_instance_code,omitempty"`
	FleetType          domain1.GameFleetType `protobuf:"varint,2,opt,name=fleet_type,json=fleetType,proto3,enum=GameFleetType" json:"fleet_type,omitempty"`
	GameSymbol         string                `protobuf:"bytes,3,opt,name=game_symbol,json=gameSymbol,proto3" json:"game_symbol,omitempty"`
}

func (x *GetListServerInstanceRequest) Reset() {
	*x = GetListServerInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_server_instance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListServerInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListServerInstanceRequest) ProtoMessage() {}

func (x *GetListServerInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_server_instance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListServerInstanceRequest.ProtoReflect.Descriptor instead.
func (*GetListServerInstanceRequest) Descriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{5}
}

func (x *GetListServerInstanceRequest) GetParentInstanceCode() string {
	if x != nil {
		return x.ParentInstanceCode
	}
	return ""
}

func (x *GetListServerInstanceRequest) GetFleetType() domain1.GameFleetType {
	if x != nil {
		return x.FleetType
	}
	return domain1.GameFleetType(0)
}

func (x *GetListServerInstanceRequest) GetGameSymbol() string {
	if x != nil {
		return x.GameSymbol
	}
	return ""
}

type CreateServerInstanceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceCode string                `protobuf:"bytes,1,opt,name=instance_code,json=instanceCode,proto3" json:"instance_code,omitempty"`
	Name         string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace    string                `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentCode   string                `protobuf:"bytes,4,opt,name=parent_code,json=parentCode,proto3" json:"parent_code,omitempty"`
	InstanceType domain1.GameFleetType `protobuf:"varint,5,opt,name=instance_type,json=instanceType,proto3,enum=GameFleetType" json:"instance_type,omitempty"`
	GameSymbol   string                `protobuf:"bytes,6,opt,name=gameSymbol,proto3" json:"gameSymbol,omitempty"`
	NumberOfGS   int32                 `protobuf:"varint,7,opt,name=numberOfGS,proto3" json:"numberOfGS,omitempty"`
}

func (x *CreateServerInstanceData) Reset() {
	*x = CreateServerInstanceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_server_instance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerInstanceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerInstanceData) ProtoMessage() {}

func (x *CreateServerInstanceData) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_server_instance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerInstanceData.ProtoReflect.Descriptor instead.
func (*CreateServerInstanceData) Descriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{6}
}

func (x *CreateServerInstanceData) GetInstanceCode() string {
	if x != nil {
		return x.InstanceCode
	}
	return ""
}

func (x *CreateServerInstanceData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServerInstanceData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateServerInstanceData) GetParentCode() string {
	if x != nil {
		return x.ParentCode
	}
	return ""
}

func (x *CreateServerInstanceData) GetInstanceType() domain1.GameFleetType {
	if x != nil {
		return x.InstanceType
	}
	return domain1.GameFleetType(0)
}

func (x *CreateServerInstanceData) GetGameSymbol() string {
	if x != nil {
		return x.GameSymbol
	}
	return ""
}

func (x *CreateServerInstanceData) GetNumberOfGS() int32 {
	if x != nil {
		return x.NumberOfGS
	}
	return 0
}

type CreateServerInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []*CreateServerInstanceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	IsInitFleet bool                        `protobuf:"varint,2,opt,name=isInitFleet,proto3" json:"isInitFleet,omitempty"`
}

func (x *CreateServerInstanceRequest) Reset() {
	*x = CreateServerInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_server_instance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerInstanceRequest) ProtoMessage() {}

func (x *CreateServerInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_server_instance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateServerInstanceRequest) Descriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{7}
}

func (x *CreateServerInstanceRequest) GetData() []*CreateServerInstanceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateServerInstanceRequest) GetIsInitFleet() bool {
	if x != nil {
		return x.IsInitFleet
	}
	return false
}

type UpdateServerInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceCode string                `protobuf:"bytes,1,opt,name=instance_code,json=instanceCode,proto3" json:"instance_code,omitempty"`
	Name         string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace    string                `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ParentCode   string                `protobuf:"bytes,4,opt,name=parent_code,json=parentCode,proto3" json:"parent_code,omitempty"`
	InstanceType domain1.GameFleetType `protobuf:"varint,5,opt,name=instance_type,json=instanceType,proto3,enum=GameFleetType" json:"instance_type,omitempty"`
	GameSymbol   string                `protobuf:"bytes,6,opt,name=gameSymbol,proto3" json:"gameSymbol,omitempty"`
	NumberOfGS   int32                 `protobuf:"varint,7,opt,name=numberOfGS,proto3" json:"numberOfGS,omitempty"`
}

func (x *UpdateServerInstanceRequest) Reset() {
	*x = UpdateServerInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_content_server_instance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerInstanceRequest) ProtoMessage() {}

func (x *UpdateServerInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_content_server_instance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerInstanceRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerInstanceRequest) Descriptor() ([]byte, []int) {
	return file_game_content_server_instance_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateServerInstanceRequest) GetInstanceCode() string {
	if x != nil {
		return x.InstanceCode
	}
	return ""
}

func (x *UpdateServerInstanceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateServerInstanceRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateServerInstanceRequest) GetParentCode() string {
	if x != nil {
		return x.ParentCode
	}
	return ""
}

func (x *UpdateServerInstanceRequest) GetInstanceType() domain1.GameFleetType {
	if x != nil {
		return x.InstanceType
	}
	return domain1.GameFleetType(0)
}

func (x *UpdateServerInstanceRequest) GetGameSymbol() string {
	if x != nil {
		return x.GameSymbol
	}
	return ""
}

func (x *UpdateServerInstanceRequest) GetNumberOfGS() int32 {
	if x != nil {
		return x.NumberOfGS
	}
	return 0
}

var File_game_content_server_instance_proto protoreflect.FileDescriptor

var file_game_content_server_instance_proto_rawDesc = []byte{
	0x0a, 0x22, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x1a, 0x27, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x73, 0x6c,
	0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x6b, 0x38, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x03, 0x0a, 0x1a, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0b, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x0c, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0c, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x56, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x0e, 0x66, 0x6c, 0x65, 0x65,
	0x74, 0x49, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x46, 0x6c,
	0x65, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x49, 0x64, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x03,
	0xf8, 0x42, 0x00, 0x22, 0x63, 0x0a, 0x1a, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6a, 0x0a, 0x18, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x31, 0x0a, 0x13, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x49, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22,
	0xa9, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x87, 0x02, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x33, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x6c,
	0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x47, 0x53, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x47, 0x53, 0x22, 0x89, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x46, 0x6c, 0x65, 0x65,
	0x74, 0x22, 0x8a, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x0d, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x53, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x53, 0x2a, 0x79,
	0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x41,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x53, 0x4c, 0x41, 0x4e, 0x44, 0x5f, 0x49,
	0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f,
	0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x4c, 0x45, 0x45, 0x54, 0x5f,
	0x49, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x03, 0x32, 0xd7, 0x03, 0x0a, 0x20, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x36, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x37, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x37, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0xde, 0x01, 0x0a, 0x31, 0x69, 0x6f, 0x2e, 0x6d, 0x75, 0x7a, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x1e, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x56, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x6f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0xaa, 0x02, 0x2e, 0x4d, 0x75, 0x7a, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_content_server_instance_proto_rawDescOnce sync.Once
	file_game_content_server_instance_proto_rawDescData = file_game_content_server_instance_proto_rawDesc
)

func file_game_content_server_instance_proto_rawDescGZIP() []byte {
	file_game_content_server_instance_proto_rawDescOnce.Do(func() {
		file_game_content_server_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_content_server_instance_proto_rawDescData)
	})
	return file_game_content_server_instance_proto_rawDescData
}

var file_game_content_server_instance_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_game_content_server_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_game_content_server_instance_proto_goTypes = []interface{}{
	(ServerInstanceQueryAction)(0),           // 0: gamecontent.serverinstance.ServerInstanceQueryAction
	(*ServerInstanceQueryRequest)(nil),       // 1: gamecontent.serverinstance.ServerInstanceQueryRequest
	(*IslandServerInstanceFilter)(nil),       // 2: gamecontent.serverinstance.IslandServerInstanceFilter
	(*GameServerInstanceFilter)(nil),         // 3: gamecontent.serverinstance.GameServerInstanceFilter
	(*FleetInstanceFilter)(nil),              // 4: gamecontent.serverinstance.FleetInstanceFilter
	(*ListServerInstanceResponse)(nil),       // 5: gamecontent.serverinstance.ListServerInstanceResponse
	(*GetListServerInstanceRequest)(nil),     // 6: gamecontent.serverinstance.GetListServerInstanceRequest
	(*CreateServerInstanceData)(nil),         // 7: gamecontent.serverinstance.CreateServerInstanceData
	(*CreateServerInstanceRequest)(nil),      // 8: gamecontent.serverinstance.CreateServerInstanceRequest
	(*UpdateServerInstanceRequest)(nil),      // 9: gamecontent.serverinstance.UpdateServerInstanceRequest
	(domain.IslandStatus)(0),                 // 10: IslandStatus
	(*domain.GameContentServerInstance)(nil), // 11: GameContentServerInstance
	(domain1.GameFleetType)(0),               // 12: GameFleetType
	(*wrapperspb.StringValue)(nil),           // 13: google.protobuf.StringValue
	(*emptypb.Empty)(nil),                    // 14: google.protobuf.Empty
}
var file_game_content_server_instance_proto_depIdxs = []int32{
	0,  // 0: gamecontent.serverinstance.ServerInstanceQueryRequest.queryAction:type_name -> gamecontent.serverinstance.ServerInstanceQueryAction
	2,  // 1: gamecontent.serverinstance.ServerInstanceQueryRequest.islandFilter:type_name -> gamecontent.serverinstance.IslandServerInstanceFilter
	3,  // 2: gamecontent.serverinstance.ServerInstanceQueryRequest.gameFilter:type_name -> gamecontent.serverinstance.GameServerInstanceFilter
	4,  // 3: gamecontent.serverinstance.ServerInstanceQueryRequest.fleetIdsFilter:type_name -> gamecontent.serverinstance.FleetInstanceFilter
	10, // 4: gamecontent.serverinstance.IslandServerInstanceFilter.status:type_name -> IslandStatus
	11, // 5: gamecontent.serverinstance.ListServerInstanceResponse.instances:type_name -> GameContentServerInstance
	12, // 6: gamecontent.serverinstance.GetListServerInstanceRequest.fleet_type:type_name -> GameFleetType
	12, // 7: gamecontent.serverinstance.CreateServerInstanceData.instance_type:type_name -> GameFleetType
	7,  // 8: gamecontent.serverinstance.CreateServerInstanceRequest.data:type_name -> gamecontent.serverinstance.CreateServerInstanceData
	12, // 9: gamecontent.serverinstance.UpdateServerInstanceRequest.instance_type:type_name -> GameFleetType
	1,  // 10: gamecontent.serverinstance.GameContentServerInstanceService.GetServerInstances:input_type -> gamecontent.serverinstance.ServerInstanceQueryRequest
	8,  // 11: gamecontent.serverinstance.GameContentServerInstanceService.CreateServerInstance:input_type -> gamecontent.serverinstance.CreateServerInstanceRequest
	9,  // 12: gamecontent.serverinstance.GameContentServerInstanceService.UpdateServerInstance:input_type -> gamecontent.serverinstance.UpdateServerInstanceRequest
	13, // 13: gamecontent.serverinstance.GameContentServerInstanceService.DeleteServerInstanceByCode:input_type -> google.protobuf.StringValue
	5,  // 14: gamecontent.serverinstance.GameContentServerInstanceService.GetServerInstances:output_type -> gamecontent.serverinstance.ListServerInstanceResponse
	14, // 15: gamecontent.serverinstance.GameContentServerInstanceService.CreateServerInstance:output_type -> google.protobuf.Empty
	14, // 16: gamecontent.serverinstance.GameContentServerInstanceService.UpdateServerInstance:output_type -> google.protobuf.Empty
	14, // 17: gamecontent.serverinstance.GameContentServerInstanceService.DeleteServerInstanceByCode:output_type -> google.protobuf.Empty
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_game_content_server_instance_proto_init() }
func file_game_content_server_instance_proto_init() {
	if File_game_content_server_instance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_content_server_instance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInstanceQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_server_instance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IslandServerInstanceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_server_instance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameServerInstanceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_server_instance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FleetInstanceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_server_instance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServerInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_server_instance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListServerInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_server_instance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerInstanceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_server_instance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_content_server_instance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_game_content_server_instance_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ServerInstanceQueryRequest_IslandFilter)(nil),
		(*ServerInstanceQueryRequest_GameFilter)(nil),
		(*ServerInstanceQueryRequest_FleetIdsFilter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_content_server_instance_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_content_server_instance_proto_goTypes,
		DependencyIndexes: file_game_content_server_instance_proto_depIdxs,
		EnumInfos:         file_game_content_server_instance_proto_enumTypes,
		MessageInfos:      file_game_content_server_instance_proto_msgTypes,
	}.Build()
	File_game_content_server_instance_proto = out.File
	file_game_content_server_instance_proto_rawDesc = nil
	file_game_content_server_instance_proto_goTypes = nil
	file_game_content_server_instance_proto_depIdxs = nil
}
